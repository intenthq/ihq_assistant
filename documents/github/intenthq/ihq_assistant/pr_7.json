{
  "title": "Source specific databases",
  "description": null,
  "author": "cdagraca",
  "created_at": "2025-03-04T16:54:29Z",
  "changed_files": [
    {
      "filename": "db/coda_embeddings.db/index.faiss",
      "patch": ""
    },
    {
      "filename": "db/coda_embeddings.db/index.pkl",
      "patch": ""
    },
    {
      "filename": "db/github_embeddings.db/index.faiss",
      "patch": ""
    },
    {
      "filename": "db/github_embeddings.db/index.pkl",
      "patch": ""
    },
    {
      "filename": "db/linear_embeddings.db/index.faiss",
      "patch": ""
    },
    {
      "filename": "db/linear_embeddings.db/index.pkl",
      "patch": ""
    },
    {
      "filename": "vectorise_data.py",
      "patch": "@@ -13,8 +13,8 @@\n \n text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=200)\n \n-docs = []\n for folder in data_folders:\n+    docs = []\n     for file in os.listdir(f\"{file_base_path}/{folder}\"):\n         loader = TextLoader(file_path=f\"{file_base_path}/{folder}/{file}\", encoding=\"utf-8\")\n         data = loader.load()\n@@ -24,6 +24,6 @@\n                 d.page_content = re.sub(\"[\\[\\(]data:image.+[\\]\\)]\", \"\", d.page_content)\n         docs += text_splitter.split_documents(data)\n \n-embeddings = OpenAIEmbeddings()\n-vectorstore = FAISS.from_documents(docs, embedding=embeddings)\n-vectorstore.save_local(\"./db/coda_linear_github_embeddings.db\")\n+        embeddings = OpenAIEmbeddings()\n+        vectorstore = FAISS.from_documents(docs, embedding=embeddings)\n+        vectorstore.save_local(f\"./db/{folder}_embeddings.db\")\n\\ No newline at end of file"
    }
  ],
  "reviews": [],
  "linked_issues": "No linked issues",
  "readme": "# Install dependencies\n\nRun\n\n```\npip3 install -r ./requirements.txt\n```\n\n# Start the bot\n\nCopy `.env.template` to `.env`, fill the tokens with real tokens\n\nCreate venv\n\n```\npython3 -m venv venv\nsource venv/bin/activate\n```\n\nRun\n\n```\npython3 slack_faiss_bot.py\n```\n"
}