{
  "title": "initial - github_pr_downloader",
  "description": null,
  "author": "igor-pechersky",
  "created_at": "2025-03-05T07:01:08Z",
  "changed_files": [
    {
      "filename": ".env.template",
      "patch": "@@ -1,3 +1,4 @@\n SLACK_BOT_TOKEN = <your-token>\n SLACK_APP_TOKEN = <your-token>\n OPENAI_API_KEY = <your-openapi-key>\n+GITHUB_TOKEN = <your-github-token>"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_1.json",
      "patch": "@@ -0,0 +1,406 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/1\",\n+  \"id\": 2370594628,\n+  \"node_id\": \"PR_kwDOOC5crs6NTGdE\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/1\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/1.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/1.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/1\",\n+  \"number\": 1,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"Adds tokens to .env file\",\n+  \"user\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T11:54:07Z\",\n+  \"updated_at\": \"2025-03-04T11:55:28Z\",\n+  \"closed_at\": \"2025-03-04T11:55:28Z\",\n+  \"merged_at\": \"2025-03-04T11:55:28Z\",\n+  \"merge_commit_sha\": \"8215e1f86e977a3835487aa34828224041383d74\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/1/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/1/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/1/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/78eb4c4b87629c96e1613da01cf2a7fc049d79b4\",\n+  \"head\": {\n+    \"label\": \"intenthq:adding-tokens\",\n+    \"ref\": \"adding-tokens\",\n+    \"sha\": \"78eb4c4b87629c96e1613da01cf2a7fc049d79b4\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"a25bc76c4f1a8c97ffb84af26b219d2cd76c504e\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/1\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/1\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/1\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/1/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/1/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/1/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/78eb4c4b87629c96e1613da01cf2a7fc049d79b4\"\n+    }\n+  },\n+  \"author_association\": \"CONTRIBUTOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"geo-harrison\",\n+    \"id\": 176415250,\n+    \"node_id\": \"U_kgDOCoPiEg\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/176415250?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/geo-harrison\",\n+    \"html_url\": \"https://github.com/geo-harrison\",\n+    \"followers_url\": \"https://api.github.com/users/geo-harrison/followers\",\n+    \"following_url\": \"https://api.github.com/users/geo-harrison/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/geo-harrison/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/geo-harrison/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/geo-harrison/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/geo-harrison/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/geo-harrison/repos\",\n+    \"events_url\": \"https://api.github.com/users/geo-harrison/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/geo-harrison/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 1,\n+  \"additions\": 26,\n+  \"deletions\": 8,\n+  \"changed_files\": 3,\n+  \"files\": [\n+    {\n+      \"sha\": \"fbdc1804299d7445b0db6d13db1dfc3b2b297ff7\",\n+      \"filename\": \".env.template\",\n+      \"status\": \"added\",\n+      \"additions\": 3,\n+      \"deletions\": 0,\n+      \"changes\": 3,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/78eb4c4b87629c96e1613da01cf2a7fc049d79b4/.env.template\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/78eb4c4b87629c96e1613da01cf2a7fc049d79b4/.env.template\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/.env.template?ref=78eb4c4b87629c96e1613da01cf2a7fc049d79b4\",\n+      \"patch\": \"@@ -0,0 +1,3 @@\\n+SLACK_BOT_TOKEN = <your-token>\\n+SLACK_APP_TOKEN = <your-token>\\n+OPENAI_API_KEY = <your-openapi-key>\"\n+    },\n+    {\n+      \"sha\": \"4c49bd78f1d08f2bc09fa0bd8191ed38b7dce5e3\",\n+      \"filename\": \".gitignore\",\n+      \"status\": \"added\",\n+      \"additions\": 1,\n+      \"deletions\": 0,\n+      \"changes\": 1,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/78eb4c4b87629c96e1613da01cf2a7fc049d79b4/.gitignore\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/78eb4c4b87629c96e1613da01cf2a7fc049d79b4/.gitignore\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/.gitignore?ref=78eb4c4b87629c96e1613da01cf2a7fc049d79b4\",\n+      \"patch\": \"@@ -0,0 +1 @@\\n+.env\"\n+    },\n+    {\n+      \"sha\": \"5097c70238f0cc7d6afb88a0b34d0167c22403a4\",\n+      \"filename\": \"slack_faiss_bot.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 22,\n+      \"deletions\": 8,\n+      \"changes\": 30,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/78eb4c4b87629c96e1613da01cf2a7fc049d79b4/slack_faiss_bot.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/78eb4c4b87629c96e1613da01cf2a7fc049d79b4/slack_faiss_bot.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/slack_faiss_bot.py?ref=78eb4c4b87629c96e1613da01cf2a7fc049d79b4\",\n+      \"patch\": \"@@ -2,16 +2,30 @@\\n import faiss\\n import numpy as np\\n import openai\\n-import logging\\n from slack_bolt import App\\n from slack_bolt.adapter.socket_mode import SocketModeHandler\\n+from dotenv import load_dotenv\\n+import logging\\n+\\n+# Load environment variables from .env file\\n+load_dotenv()\\n+\\n+print(\\\"SLACK_BOT_TOKEN:\\\", os.getenv(\\\"SLACK_BOT_TOKEN\\\"))\\n+print(\\\"SLACK_APP_TOKEN:\\\", os.getenv(\\\"SLACK_APP_TOKEN\\\"))\\n+print(\\\"OPENAI_API_KEY:\\\", os.getenv(\\\"OPENAI_API_KEY\\\"))\\n+\\n+# # Define API Keys and Tokens from environment variables\\n+SLACK_BOT_TOKEN = os.getenv(\\\"SLACK_BOT_TOKEN\\\")\\n+SLACK_APP_TOKEN = os.getenv(\\\"SLACK_APP_TOKEN\\\")\\n+OPENAI_API_KEY = os.getenv(\\\"OPENAI_API_KEY\\\")\\n+\\n+\\n \\n-# Define API Keys and Tokens\\n-SLACK_BOT_TOKEN = \\\"<your-token>\\\"\\n-SLACK_APP_TOKEN = \\\"<your-app-token>\\\"\\n-OPEN_API_KEY = \\\"<your-open-api-token>\\\"\\n # Configure OpenAI API Key\\n-openai.api_key = OPEN_API_KEY\\n+openai.api_key = OPENAI_API_KEY\\n+\\n+# Enable debug logging\\n+logging.basicConfig(level=logging.DEBUG)\\n \\n # Sample test documents\\n documents = [\\n@@ -51,13 +65,11 @@ def get_embedding(text):\\n index = faiss.IndexFlatL2(d)\\n index.add(embeddings)\\n \\n-logging.basicConfig(level=logging.DEBUG)\\n # Initialize Slack App\\n app = App(token=SLACK_BOT_TOKEN)\\n \\n # Function to search FAISS\\n def search_faiss(query):\\n-    print(f\\\"Searching for the best answer in the vector for {query}\\\")\\n     query_vector = np.array([get_embedding(query)], dtype=np.float32)\\n     faiss.normalize_L2(query_vector)\\n     _, idx = index.search(query_vector, k=1)\\n@@ -66,8 +78,10 @@ def search_faiss(query):\\n # Slack bot listens for messages that mention it\\n @app.event(\\\"app_mention\\\")\\n def handle_mention(event, say):\\n+    logging.debug(f\\\"🔹 Received mention event: {event}\\\")  # Debugging log\\n     user_query = event[\\\"text\\\"]\\n     best_match = search_faiss(user_query)\\n+    logging.debug(f\\\"🔹 Best FAISS match: {best_match}\\\")\\n     say(f\\\"Best Match: {best_match}\\\")\\n \\n # Start the Slack bot using Socket Mode\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/.env.template b/.env.template\\nnew file mode 100644\\nindex 0000000..fbdc180\\n--- /dev/null\\n+++ b/.env.template\\n@@ -0,0 +1,3 @@\\n+SLACK_BOT_TOKEN = <your-token>\\n+SLACK_APP_TOKEN = <your-token>\\n+OPENAI_API_KEY = <your-openapi-key>\\ndiff --git a/.gitignore b/.gitignore\\nnew file mode 100644\\nindex 0000000..4c49bd7\\n--- /dev/null\\n+++ b/.gitignore\\n@@ -0,0 +1 @@\\n+.env\\ndiff --git a/slack_faiss_bot.py b/slack_faiss_bot.py\\nindex a209a10..5097c70 100644\\n--- a/slack_faiss_bot.py\\n+++ b/slack_faiss_bot.py\\n@@ -2,16 +2,30 @@\\n import faiss\\n import numpy as np\\n import openai\\n-import logging\\n from slack_bolt import App\\n from slack_bolt.adapter.socket_mode import SocketModeHandler\\n+from dotenv import load_dotenv\\n+import logging\\n+\\n+# Load environment variables from .env file\\n+load_dotenv()\\n+\\n+print(\\\"SLACK_BOT_TOKEN:\\\", os.getenv(\\\"SLACK_BOT_TOKEN\\\"))\\n+print(\\\"SLACK_APP_TOKEN:\\\", os.getenv(\\\"SLACK_APP_TOKEN\\\"))\\n+print(\\\"OPENAI_API_KEY:\\\", os.getenv(\\\"OPENAI_API_KEY\\\"))\\n+\\n+# # Define API Keys and Tokens from environment variables\\n+SLACK_BOT_TOKEN = os.getenv(\\\"SLACK_BOT_TOKEN\\\")\\n+SLACK_APP_TOKEN = os.getenv(\\\"SLACK_APP_TOKEN\\\")\\n+OPENAI_API_KEY = os.getenv(\\\"OPENAI_API_KEY\\\")\\n+\\n+\\n \\n-# Define API Keys and Tokens\\n-SLACK_BOT_TOKEN = \\\"<your-token>\\\"\\n-SLACK_APP_TOKEN = \\\"<your-app-token>\\\"\\n-OPEN_API_KEY = \\\"<your-open-api-token>\\\"\\n # Configure OpenAI API Key\\n-openai.api_key = OPEN_API_KEY\\n+openai.api_key = OPENAI_API_KEY\\n+\\n+# Enable debug logging\\n+logging.basicConfig(level=logging.DEBUG)\\n \\n # Sample test documents\\n documents = [\\n@@ -51,13 +65,11 @@ def get_embedding(text):\\n index = faiss.IndexFlatL2(d)\\n index.add(embeddings)\\n \\n-logging.basicConfig(level=logging.DEBUG)\\n # Initialize Slack App\\n app = App(token=SLACK_BOT_TOKEN)\\n \\n # Function to search FAISS\\n def search_faiss(query):\\n-    print(f\\\"Searching for the best answer in the vector for {query}\\\")\\n     query_vector = np.array([get_embedding(query)], dtype=np.float32)\\n     faiss.normalize_L2(query_vector)\\n     _, idx = index.search(query_vector, k=1)\\n@@ -66,8 +78,10 @@ def search_faiss(query):\\n # Slack bot listens for messages that mention it\\n @app.event(\\\"app_mention\\\")\\n def handle_mention(event, say):\\n+    logging.debug(f\\\"🔹 Received mention event: {event}\\\")  # Debugging log\\n     user_query = event[\\\"text\\\"]\\n     best_match = search_faiss(user_query)\\n+    logging.debug(f\\\"🔹 Best FAISS match: {best_match}\\\")\\n     say(f\\\"Best Match: {best_match}\\\")\\n \\n # Start the Slack bot using Socket Mode\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_10.json",
      "patch": ""
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_2.json",
      "patch": "@@ -0,0 +1,416 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/2\",\n+  \"id\": 2370749475,\n+  \"node_id\": \"PR_kwDOOC5crs6NTsQj\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/2\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/2.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/2.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/2\",\n+  \"number\": 2,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"Updates requirements + instructions\",\n+  \"user\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T12:59:17Z\",\n+  \"updated_at\": \"2025-03-04T13:09:39Z\",\n+  \"closed_at\": \"2025-03-04T13:09:39Z\",\n+  \"merged_at\": \"2025-03-04T13:09:39Z\",\n+  \"merge_commit_sha\": \"7c57a760749f4556c062ea78e20412094e218f1d\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [\n+    {\n+      \"login\": \"geo-harrison\",\n+      \"id\": 176415250,\n+      \"node_id\": \"U_kgDOCoPiEg\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/176415250?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/geo-harrison\",\n+      \"html_url\": \"https://github.com/geo-harrison\",\n+      \"followers_url\": \"https://api.github.com/users/geo-harrison/followers\",\n+      \"following_url\": \"https://api.github.com/users/geo-harrison/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/geo-harrison/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/geo-harrison/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/geo-harrison/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/geo-harrison/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/geo-harrison/repos\",\n+      \"events_url\": \"https://api.github.com/users/geo-harrison/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/geo-harrison/received_events\",\n+      \"type\": \"User\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    }\n+  ],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/2/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/2/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/2/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/d7db52defabd1998717a77054eede44fa574b871\",\n+  \"head\": {\n+    \"label\": \"intenthq:update-requirements\",\n+    \"ref\": \"update-requirements\",\n+    \"sha\": \"d7db52defabd1998717a77054eede44fa574b871\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"4b19365d3bdcfcfccc40ce21289e0aa47bfae97e\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/2\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/2\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/2\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/2/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/2/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/2/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/d7db52defabd1998717a77054eede44fa574b871\"\n+    }\n+  },\n+  \"author_association\": \"CONTRIBUTOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 1,\n+  \"additions\": 28,\n+  \"deletions\": 1,\n+  \"changed_files\": 2,\n+  \"files\": [\n+    {\n+      \"sha\": \"b631dc4bf956960f10cdc2a71f44871014ed1bba\",\n+      \"filename\": \"README.md\",\n+      \"status\": \"added\",\n+      \"additions\": 24,\n+      \"deletions\": 0,\n+      \"changes\": 24,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/d7db52defabd1998717a77054eede44fa574b871/README.md\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/d7db52defabd1998717a77054eede44fa574b871/README.md\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/README.md?ref=d7db52defabd1998717a77054eede44fa574b871\",\n+      \"patch\": \"@@ -0,0 +1,24 @@\\n+# Install dependencies\\n+\\n+Run\\n+\\n+```\\n+pip3 install -r ./requirements.txt\\n+```\\n+\\n+# Start the bot\\n+\\n+Copy `.env.template` to `.env`, fill the tokens with real tokens\\n+\\n+Create venv\\n+\\n+```\\n+python3 -m venv venv\\n+source venv/bin/activate\\n+```\\n+\\n+Run\\n+\\n+```\\n+python3 slack_faiss_bot.py\\n+```\"\n+    },\n+    {\n+      \"sha\": \"51a41e0f59e267c40fbd2b2116f13b143b646480\",\n+      \"filename\": \"requirements.txt\",\n+      \"status\": \"modified\",\n+      \"additions\": 4,\n+      \"deletions\": 1,\n+      \"changes\": 5,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/d7db52defabd1998717a77054eede44fa574b871/requirements.txt\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/d7db52defabd1998717a77054eede44fa574b871/requirements.txt\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/requirements.txt?ref=d7db52defabd1998717a77054eede44fa574b871\",\n+      \"patch\": \"@@ -4,4 +4,7 @@ tiktoken\\n faiss-cpu\\n langchain_experimental\\n langchain[docarray]\\n-langchain[openai]\\n\\\\ No newline at end of file\\n+langchain[openai]\\n+numpy\\n+python-dotenv\\n+slack_bolt\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/README.md b/README.md\\nnew file mode 100644\\nindex 0000000..b631dc4\\n--- /dev/null\\n+++ b/README.md\\n@@ -0,0 +1,24 @@\\n+# Install dependencies\\n+\\n+Run\\n+\\n+```\\n+pip3 install -r ./requirements.txt\\n+```\\n+\\n+# Start the bot\\n+\\n+Copy `.env.template` to `.env`, fill the tokens with real tokens\\n+\\n+Create venv\\n+\\n+```\\n+python3 -m venv venv\\n+source venv/bin/activate\\n+```\\n+\\n+Run\\n+\\n+```\\n+python3 slack_faiss_bot.py\\n+```\\ndiff --git a/requirements.txt b/requirements.txt\\nindex f612dd8..51a41e0 100644\\n--- a/requirements.txt\\n+++ b/requirements.txt\\n@@ -4,4 +4,7 @@ tiktoken\\n faiss-cpu\\n langchain_experimental\\n langchain[docarray]\\n-langchain[openai]\\n\\\\ No newline at end of file\\n+langchain[openai]\\n+numpy\\n+python-dotenv\\n+slack_bolt\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_3.json",
      "patch": "@@ -0,0 +1,416 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/3\",\n+  \"id\": 2370974945,\n+  \"node_id\": \"PR_kwDOOC5crs6NUjTh\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/3\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/3.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/3.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/3\",\n+  \"number\": 3,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"strip coda images; make callable vector functions\",\n+  \"user\": {\n+    \"login\": \"cdagraca\",\n+    \"id\": 5451603,\n+    \"node_id\": \"MDQ6VXNlcjU0NTE2MDM=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/5451603?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/cdagraca\",\n+    \"html_url\": \"https://github.com/cdagraca\",\n+    \"followers_url\": \"https://api.github.com/users/cdagraca/followers\",\n+    \"following_url\": \"https://api.github.com/users/cdagraca/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/cdagraca/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/cdagraca/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/cdagraca/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/cdagraca/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/cdagraca/repos\",\n+    \"events_url\": \"https://api.github.com/users/cdagraca/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/cdagraca/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T14:10:22Z\",\n+  \"updated_at\": \"2025-03-04T14:11:31Z\",\n+  \"closed_at\": \"2025-03-04T14:11:31Z\",\n+  \"merged_at\": \"2025-03-04T14:11:31Z\",\n+  \"merge_commit_sha\": \"f25a591e5f03e1c145f236eecc6853373a59e2eb\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/3/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/3/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/3/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/1dc821f596741d35c60e9be9e951cb301aa27698\",\n+  \"head\": {\n+    \"label\": \"intenthq:strip_images\",\n+    \"ref\": \"strip_images\",\n+    \"sha\": \"1dc821f596741d35c60e9be9e951cb301aa27698\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"7c57a760749f4556c062ea78e20412094e218f1d\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/3\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/3\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/3\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/3/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/3/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/3/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/1dc821f596741d35c60e9be9e951cb301aa27698\"\n+    }\n+  },\n+  \"author_association\": \"COLLABORATOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 1,\n+  \"additions\": 26,\n+  \"deletions\": 20,\n+  \"changed_files\": 4,\n+  \"files\": [\n+    {\n+      \"sha\": \"90861a9a3f54c1debcf58101461e4075bf0f30c4\",\n+      \"filename\": \"db/coda_linear_github_embeddings.db/index.faiss\",\n+      \"status\": \"modified\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/1dc821f596741d35c60e9be9e951cb301aa27698/db%2Fcoda_linear_github_embeddings.db%2Findex.faiss\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/1dc821f596741d35c60e9be9e951cb301aa27698/db%2Fcoda_linear_github_embeddings.db%2Findex.faiss\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Fcoda_linear_github_embeddings.db%2Findex.faiss?ref=1dc821f596741d35c60e9be9e951cb301aa27698\"\n+    },\n+    {\n+      \"sha\": \"f429abde888add170af821aef84f4ee92167a0fe\",\n+      \"filename\": \"db/coda_linear_github_embeddings.db/index.pkl\",\n+      \"status\": \"modified\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/1dc821f596741d35c60e9be9e951cb301aa27698/db%2Fcoda_linear_github_embeddings.db%2Findex.pkl\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/1dc821f596741d35c60e9be9e951cb301aa27698/db%2Fcoda_linear_github_embeddings.db%2Findex.pkl\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Fcoda_linear_github_embeddings.db%2Findex.pkl?ref=1dc821f596741d35c60e9be9e951cb301aa27698\"\n+    },\n+    {\n+      \"sha\": \"0ede00e53eec4e87f4b0352617ed4edf5161c275\",\n+      \"filename\": \"load_vector_db.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 21,\n+      \"deletions\": 20,\n+      \"changes\": 41,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/1dc821f596741d35c60e9be9e951cb301aa27698/load_vector_db.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/1dc821f596741d35c60e9be9e951cb301aa27698/load_vector_db.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/load_vector_db.py?ref=1dc821f596741d35c60e9be9e951cb301aa27698\",\n+      \"patch\": \"@@ -1,28 +1,29 @@\\n-import os\\n-\\n from faiss import IndexFlatL2\\n from langchain import hub\\n from langchain.chat_models import init_chat_model\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n from langchain.embeddings import OpenAIEmbeddings\\n \\n-os.environ[\\\"OPENAI_API_KEY\\\"] = \\\"<your key>\\\"\\n-\\n-embeddings = OpenAIEmbeddings()\\n-faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})\\n-db = faiss.load_local(folder_path=\\\"./db/coda_linear_embeddings.db\\\",\\n-                      embeddings=embeddings,\\n-                      allow_dangerous_deserialization=True)\\n-\\n-llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n-\\n-question = \\\"What is the IHQ Graph\\\"\\n-\\n-docs = db.similarity_search(query=question, k=3)\\n-docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n-\\n-prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n \\n-response = llm.invoke(prompt.invoke({\\\"question\\\": question, \\\"context\\\": docs_content}))\\n-print(response.content)\\n+# These functions assume os.environ[\\\"OPENAI_API_KEY\\\"] is set\\n+def load_embeddings(source_path:str = \\\"coda_linear_github_embeddings.db\\\"):\\n+    embeddings = OpenAIEmbeddings()\\n+    faiss = FAISS(embedding_function=embeddings,\\n+                  index=IndexFlatL2,\\n+                  docstore=InMemoryDocstore(),\\n+                  index_to_docstore_id={})\\n+    return faiss.load_local(folder_path=f\\\"./db/{source_path}\\\",\\n+                            embeddings=embeddings,\\n+                            allow_dangerous_deserialization=True)\\n+\\n+\\n+def execute_query(question: str, embeddings:list = None, model:str = \\\"gpt-4\\\"):\\n+    if embeddings is not None and len(embeddings) > 0:\\n+        docs = embeddings.similarity_search(query=question, k=3)\\n+        docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n+    else:\\n+        docs_content = \\\"\\\"\\n+    prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n+    llm = init_chat_model(model, model_provider=\\\"openai\\\")\\n+    return llm.invoke(prompt.invoke({\\\"question\\\": question, \\\"context\\\": docs_content})).content\"\n+    },\n+    {\n+      \"sha\": \"5fd0741d950521d0ebdbd60db851e7c133d87106\",\n+      \"filename\": \"vectorise_data.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 5,\n+      \"deletions\": 0,\n+      \"changes\": 5,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/1dc821f596741d35c60e9be9e951cb301aa27698/vectorise_data.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/1dc821f596741d35c60e9be9e951cb301aa27698/vectorise_data.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/vectorise_data.py?ref=1dc821f596741d35c60e9be9e951cb301aa27698\",\n+      \"patch\": \"@@ -1,4 +1,5 @@\\n import os\\n+import re\\n \\n from langchain.document_loaders import TextLoader\\n from langchain.text_splitter import CharacterTextSplitter\\n@@ -17,6 +18,10 @@\\n     for file in os.listdir(f\\\"{file_base_path}/{folder}\\\"):\\n         loader = TextLoader(file_path=f\\\"{file_base_path}/{folder}/{file}\\\", encoding=\\\"utf-8\\\")\\n         data = loader.load()\\n+        if folder == \\\"coda\\\":\\n+            # Strip out the encoded images\\n+            for d in data:\\n+                d.page_content = re.sub(\\\"(\\\\[|\\\\()data:image.+(\\\\]|\\\\))\\\", \\\"\\\", d.page_content)\\n         docs += text_splitter.split_documents(data)\\n \\n embeddings = OpenAIEmbeddings()\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/db/coda_linear_github_embeddings.db/index.faiss b/db/coda_linear_github_embeddings.db/index.faiss\\nindex 758fbe7..90861a9 100644\\nBinary files a/db/coda_linear_github_embeddings.db/index.faiss and b/db/coda_linear_github_embeddings.db/index.faiss differ\\ndiff --git a/db/coda_linear_github_embeddings.db/index.pkl b/db/coda_linear_github_embeddings.db/index.pkl\\nindex 235a9df..f429abd 100644\\nBinary files a/db/coda_linear_github_embeddings.db/index.pkl and b/db/coda_linear_github_embeddings.db/index.pkl differ\\ndiff --git a/load_vector_db.py b/load_vector_db.py\\nindex 84b055d..0ede00e 100644\\n--- a/load_vector_db.py\\n+++ b/load_vector_db.py\\n@@ -1,5 +1,3 @@\\n-import os\\n-\\n from faiss import IndexFlatL2\\n from langchain import hub\\n from langchain.chat_models import init_chat_model\\n@@ -7,22 +5,25 @@\\n from langchain_community.vectorstores import FAISS\\n from langchain.embeddings import OpenAIEmbeddings\\n \\n-os.environ[\\\"OPENAI_API_KEY\\\"] = \\\"<your key>\\\"\\n-\\n-embeddings = OpenAIEmbeddings()\\n-faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})\\n-db = faiss.load_local(folder_path=\\\"./db/coda_linear_embeddings.db\\\",\\n-                      embeddings=embeddings,\\n-                      allow_dangerous_deserialization=True)\\n-\\n-llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n-\\n-question = \\\"What is the IHQ Graph\\\"\\n-\\n-docs = db.similarity_search(query=question, k=3)\\n-docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n-\\n-prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n \\n-response = llm.invoke(prompt.invoke({\\\"question\\\": question, \\\"context\\\": docs_content}))\\n-print(response.content)\\n+# These functions assume os.environ[\\\"OPENAI_API_KEY\\\"] is set\\n+def load_embeddings(source_path:str = \\\"coda_linear_github_embeddings.db\\\"):\\n+    embeddings = OpenAIEmbeddings()\\n+    faiss = FAISS(embedding_function=embeddings,\\n+                  index=IndexFlatL2,\\n+                  docstore=InMemoryDocstore(),\\n+                  index_to_docstore_id={})\\n+    return faiss.load_local(folder_path=f\\\"./db/{source_path}\\\",\\n+                            embeddings=embeddings,\\n+                            allow_dangerous_deserialization=True)\\n+\\n+\\n+def execute_query(question: str, embeddings:list = None, model:str = \\\"gpt-4\\\"):\\n+    if embeddings is not None and len(embeddings) > 0:\\n+        docs = embeddings.similarity_search(query=question, k=3)\\n+        docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n+    else:\\n+        docs_content = \\\"\\\"\\n+    prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n+    llm = init_chat_model(model, model_provider=\\\"openai\\\")\\n+    return llm.invoke(prompt.invoke({\\\"question\\\": question, \\\"context\\\": docs_content})).content\\ndiff --git a/vectorise_data.py b/vectorise_data.py\\nindex 622cb0d..5fd0741 100644\\n--- a/vectorise_data.py\\n+++ b/vectorise_data.py\\n@@ -1,4 +1,5 @@\\n import os\\n+import re\\n \\n from langchain.document_loaders import TextLoader\\n from langchain.text_splitter import CharacterTextSplitter\\n@@ -17,6 +18,10 @@\\n     for file in os.listdir(f\\\"{file_base_path}/{folder}\\\"):\\n         loader = TextLoader(file_path=f\\\"{file_base_path}/{folder}/{file}\\\", encoding=\\\"utf-8\\\")\\n         data = loader.load()\\n+        if folder == \\\"coda\\\":\\n+            # Strip out the encoded images\\n+            for d in data:\\n+                d.page_content = re.sub(\\\"(\\\\[|\\\\()data:image.+(\\\\]|\\\\))\\\", \\\"\\\", d.page_content)\\n         docs += text_splitter.split_documents(data)\\n \\n embeddings = OpenAIEmbeddings()\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_4.json",
      "patch": "@@ -0,0 +1,404 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/4\",\n+  \"id\": 2371021882,\n+  \"node_id\": \"PR_kwDOOC5crs6NUuw6\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/4\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/4.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/4.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/4\",\n+  \"number\": 4,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"Updates bot to work better\",\n+  \"user\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T14:29:08Z\",\n+  \"updated_at\": \"2025-03-04T14:31:10Z\",\n+  \"closed_at\": \"2025-03-04T14:31:10Z\",\n+  \"merged_at\": \"2025-03-04T14:31:09Z\",\n+  \"merge_commit_sha\": \"7b74087e75e8c9b0ee70115e14b30a1892d5d680\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [\n+    {\n+      \"login\": \"geo-harrison\",\n+      \"id\": 176415250,\n+      \"node_id\": \"U_kgDOCoPiEg\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/176415250?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/geo-harrison\",\n+      \"html_url\": \"https://github.com/geo-harrison\",\n+      \"followers_url\": \"https://api.github.com/users/geo-harrison/followers\",\n+      \"following_url\": \"https://api.github.com/users/geo-harrison/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/geo-harrison/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/geo-harrison/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/geo-harrison/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/geo-harrison/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/geo-harrison/repos\",\n+      \"events_url\": \"https://api.github.com/users/geo-harrison/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/geo-harrison/received_events\",\n+      \"type\": \"User\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    }\n+  ],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/4/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/4/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/4/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/02fce9b43b3f15f111d02c2acada096d4dd0e7a8\",\n+  \"head\": {\n+    \"label\": \"intenthq:update-bot\",\n+    \"ref\": \"update-bot\",\n+    \"sha\": \"02fce9b43b3f15f111d02c2acada096d4dd0e7a8\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"f25a591e5f03e1c145f236eecc6853373a59e2eb\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/4\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/4\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/4\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/4/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/4/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/4/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/02fce9b43b3f15f111d02c2acada096d4dd0e7a8\"\n+    }\n+  },\n+  \"author_association\": \"CONTRIBUTOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"geo-harrison\",\n+    \"id\": 176415250,\n+    \"node_id\": \"U_kgDOCoPiEg\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/176415250?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/geo-harrison\",\n+    \"html_url\": \"https://github.com/geo-harrison\",\n+    \"followers_url\": \"https://api.github.com/users/geo-harrison/followers\",\n+    \"following_url\": \"https://api.github.com/users/geo-harrison/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/geo-harrison/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/geo-harrison/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/geo-harrison/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/geo-harrison/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/geo-harrison/repos\",\n+    \"events_url\": \"https://api.github.com/users/geo-harrison/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/geo-harrison/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 1,\n+  \"additions\": 16,\n+  \"deletions\": 2,\n+  \"changed_files\": 1,\n+  \"files\": [\n+    {\n+      \"sha\": \"2faf775bc467fb1275adf9c3f2bd810225c9428f\",\n+      \"filename\": \"slack_faiss_bot.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 16,\n+      \"deletions\": 2,\n+      \"changes\": 18,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/02fce9b43b3f15f111d02c2acada096d4dd0e7a8/slack_faiss_bot.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/02fce9b43b3f15f111d02c2acada096d4dd0e7a8/slack_faiss_bot.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/slack_faiss_bot.py?ref=02fce9b43b3f15f111d02c2acada096d4dd0e7a8\",\n+      \"patch\": \"@@ -8,6 +8,8 @@\\n import logging\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n+from langchain import hub\\n+from langchain.chat_models import init_chat_model\\n from langchain.embeddings import OpenAIEmbeddings\\n from faiss import IndexFlatL2\\n \\n@@ -47,8 +49,20 @@ def get_embedding(text):\\n def search_faiss(query):\\n     embeddings = OpenAIEmbeddings()\\n     faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})    \\n-    db = faiss.load_local(folder_path=\\\"./db/coda_linear_embeddings.db\\\", embeddings=embeddings, allow_dangerous_deserialization=True)\\n-    return db.similarity_search(query, k=5)\\n+    db = faiss.load_local(folder_path=\\\"./db/coda_linear_github_embeddings.db\\\", embeddings=embeddings, allow_dangerous_deserialization=True)\\n+    \\n+    docs = db.similarity_search(query, k=3)\\n+    logging.debug(f\\\"Len docs: {len(docs)}\\\")\\n+      \\n+    docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n+    logging.debug(f\\\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\\\")\\n+    prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n+\\n+\\n+    llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n+    response = llm.invoke(prompt.invoke({\\\"question\\\": query, \\\"context\\\": docs_content}))\\n+    \\n+    return response.content\\n \\n # Slack bot listens for messages that mention it\\n @app.event(\\\"app_mention\\\")\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/slack_faiss_bot.py b/slack_faiss_bot.py\\nindex 1b118cd..2faf775 100644\\n--- a/slack_faiss_bot.py\\n+++ b/slack_faiss_bot.py\\n@@ -8,6 +8,8 @@\\n import logging\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n+from langchain import hub\\n+from langchain.chat_models import init_chat_model\\n from langchain.embeddings import OpenAIEmbeddings\\n from faiss import IndexFlatL2\\n \\n@@ -47,8 +49,20 @@ def get_embedding(text):\\n def search_faiss(query):\\n     embeddings = OpenAIEmbeddings()\\n     faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})    \\n-    db = faiss.load_local(folder_path=\\\"./db/coda_linear_embeddings.db\\\", embeddings=embeddings, allow_dangerous_deserialization=True)\\n-    return db.similarity_search(query, k=5)\\n+    db = faiss.load_local(folder_path=\\\"./db/coda_linear_github_embeddings.db\\\", embeddings=embeddings, allow_dangerous_deserialization=True)\\n+    \\n+    docs = db.similarity_search(query, k=3)\\n+    logging.debug(f\\\"Len docs: {len(docs)}\\\")\\n+      \\n+    docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n+    logging.debug(f\\\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\\\")\\n+    prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n+\\n+\\n+    llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n+    response = llm.invoke(prompt.invoke({\\\"question\\\": query, \\\"context\\\": docs_content}))\\n+    \\n+    return response.content\\n \\n # Slack bot listens for messages that mention it\\n @app.event(\\\"app_mention\\\")\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_5.json",
      "patch": "@@ -0,0 +1,404 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/5\",\n+  \"id\": 2371122268,\n+  \"node_id\": \"PR_kwDOOC5crs6NVHRc\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/5\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/5.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/5.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/5\",\n+  \"number\": 5,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"Adds messages history\",\n+  \"user\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T15:10:14Z\",\n+  \"updated_at\": \"2025-03-04T16:20:33Z\",\n+  \"closed_at\": \"2025-03-04T16:20:32Z\",\n+  \"merged_at\": \"2025-03-04T16:20:32Z\",\n+  \"merge_commit_sha\": \"ae1d94fc3241225b25e99d930ec6908c0dd4ebad\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [\n+    {\n+      \"login\": \"geo-harrison\",\n+      \"id\": 176415250,\n+      \"node_id\": \"U_kgDOCoPiEg\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/176415250?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/geo-harrison\",\n+      \"html_url\": \"https://github.com/geo-harrison\",\n+      \"followers_url\": \"https://api.github.com/users/geo-harrison/followers\",\n+      \"following_url\": \"https://api.github.com/users/geo-harrison/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/geo-harrison/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/geo-harrison/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/geo-harrison/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/geo-harrison/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/geo-harrison/repos\",\n+      \"events_url\": \"https://api.github.com/users/geo-harrison/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/geo-harrison/received_events\",\n+      \"type\": \"User\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    }\n+  ],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/5/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/084389d27565be19a4c46d3924177038a5d39b57\",\n+  \"head\": {\n+    \"label\": \"intenthq:add-messages-history\",\n+    \"ref\": \"add-messages-history\",\n+    \"sha\": \"084389d27565be19a4c46d3924177038a5d39b57\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"7b74087e75e8c9b0ee70115e14b30a1892d5d680\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/5\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/5\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/5\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/5/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/084389d27565be19a4c46d3924177038a5d39b57\"\n+    }\n+  },\n+  \"author_association\": \"CONTRIBUTOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 1,\n+  \"additions\": 34,\n+  \"deletions\": 13,\n+  \"changed_files\": 1,\n+  \"files\": [\n+    {\n+      \"sha\": \"21fa2a2094c950b16945496e1164886e8386a00c\",\n+      \"filename\": \"slack_faiss_bot.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 34,\n+      \"deletions\": 13,\n+      \"changes\": 47,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/084389d27565be19a4c46d3924177038a5d39b57/slack_faiss_bot.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/084389d27565be19a4c46d3924177038a5d39b57/slack_faiss_bot.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/slack_faiss_bot.py?ref=084389d27565be19a4c46d3924177038a5d39b57\",\n+      \"patch\": \"@@ -6,12 +6,15 @@\\n from slack_bolt.adapter.socket_mode import SocketModeHandler\\n from dotenv import load_dotenv\\n import logging\\n+from collections import deque\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n from langchain import hub\\n from langchain.chat_models import init_chat_model\\n from langchain.embeddings import OpenAIEmbeddings\\n from faiss import IndexFlatL2\\n+from langchain.chains import LLMChain\\n+from langchain.prompts import PromptTemplate\\n \\n # Load environment variables from .env file\\n load_dotenv()\\n@@ -20,19 +23,19 @@\\n print(\\\"SLACK_APP_TOKEN:\\\", os.getenv(\\\"SLACK_APP_TOKEN\\\"))\\n print(\\\"OPENAI_API_KEY:\\\", os.getenv(\\\"OPENAI_API_KEY\\\"))\\n \\n-# # Define API Keys and Tokens from environment variables\\n+# Define API Keys and Tokens from environment variables\\n SLACK_BOT_TOKEN = os.getenv(\\\"SLACK_BOT_TOKEN\\\")\\n SLACK_APP_TOKEN = os.getenv(\\\"SLACK_APP_TOKEN\\\")\\n OPENAI_API_KEY = os.getenv(\\\"OPENAI_API_KEY\\\")\\n \\n-\\n-\\n # Configure OpenAI API Key\\n openai.api_key = OPENAI_API_KEY\\n \\n # Enable debug logging\\n logging.basicConfig(level=logging.DEBUG)\\n \\n+# Memory storage for last 5 mentions\\n+mention_memory = {}  # Key: channel_id, Value: deque of last 5 mentions\\n \\n # Generate OpenAI embeddings for documents\\n def get_embedding(text):\\n@@ -41,36 +44,54 @@ def get_embedding(text):\\n     )\\n     return np.array(response.data[0].embedding, dtype=np.float32)\\n \\n-\\n # Initialize Slack App\\n app = App(token=SLACK_BOT_TOKEN)\\n \\n # Function to search FAISS\\n-def search_faiss(query):\\n+def search_faiss(query, channel_id):\\n     embeddings = OpenAIEmbeddings()\\n-    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})    \\n+    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})\\n     db = faiss.load_local(folder_path=\\\"./db/coda_linear_github_embeddings.db\\\", embeddings=embeddings, allow_dangerous_deserialization=True)\\n-    \\n+\\n     docs = db.similarity_search(query, k=3)\\n     logging.debug(f\\\"Len docs: {len(docs)}\\\")\\n-      \\n+\\n     docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n     logging.debug(f\\\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\\\")\\n-    prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n \\n+    # Retrieve last 5 messages from memory for this channel\\n+    chat_history = \\\"\\\\n\\\".join(mention_memory.get(channel_id, []))\\n+    logging.debug(f\\\"🔹 Chat History for channel {channel_id}: {chat_history}\\\")\\n \\n     llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n-    response = llm.invoke(prompt.invoke({\\\"question\\\": query, \\\"context\\\": docs_content}))\\n-    \\n-    return response.content\\n+    prompt_template = PromptTemplate(\\n+        input_variables=[\\\"chat_history\\\", \\\"question\\\", \\\"context\\\"],\\n+        template=\\\"{chat_history}\\\\nUser: {question}\\\\nContext: {context}\\\\nAssistant:\\\"\\n+    )\\n+    chain = LLMChain(llm=llm, prompt=prompt_template)\\n+\\n+    response = chain.run(chat_history=chat_history, question=query, context=docs_content)\\n+\\n+    return response  # Fix: LLMChain outputs a string, no need for `.content`\\n+\\n+# Function to store last 5 mentions per channel\\n+def store_mention(channel_id, mention_text):\\n+    if channel_id not in mention_memory:\\n+        mention_memory[channel_id] = deque(maxlen=10)\\n+    mention_memory[channel_id].append(mention_text)\\n+    logging.debug(f\\\"🔹 Updated memory for channel {channel_id}: {list(mention_memory[channel_id])}\\\")\\n \\n # Slack bot listens for messages that mention it\\n @app.event(\\\"app_mention\\\")\\n def handle_mention(event, say):\\n     logging.debug(f\\\"🔹 Received mention event: {event}\\\")  # Debugging log\\n     user_query = event[\\\"text\\\"]\\n-    best_match = search_faiss(user_query)\\n+    channel_id = event[\\\"channel\\\"]\\n+    \\n+    store_mention(channel_id, user_query)  # Store the mention\\n+    best_match = search_faiss(user_query, channel_id)\\n     logging.debug(f\\\"🔹 Best FAISS match: {best_match}\\\")\\n+    \\n     say(f\\\"Best Match: {best_match}\\\")\\n \\n # Start the Slack bot using Socket Mode\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/slack_faiss_bot.py b/slack_faiss_bot.py\\nindex 2faf775..21fa2a2 100644\\n--- a/slack_faiss_bot.py\\n+++ b/slack_faiss_bot.py\\n@@ -6,12 +6,15 @@\\n from slack_bolt.adapter.socket_mode import SocketModeHandler\\n from dotenv import load_dotenv\\n import logging\\n+from collections import deque\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n from langchain import hub\\n from langchain.chat_models import init_chat_model\\n from langchain.embeddings import OpenAIEmbeddings\\n from faiss import IndexFlatL2\\n+from langchain.chains import LLMChain\\n+from langchain.prompts import PromptTemplate\\n \\n # Load environment variables from .env file\\n load_dotenv()\\n@@ -20,19 +23,19 @@\\n print(\\\"SLACK_APP_TOKEN:\\\", os.getenv(\\\"SLACK_APP_TOKEN\\\"))\\n print(\\\"OPENAI_API_KEY:\\\", os.getenv(\\\"OPENAI_API_KEY\\\"))\\n \\n-# # Define API Keys and Tokens from environment variables\\n+# Define API Keys and Tokens from environment variables\\n SLACK_BOT_TOKEN = os.getenv(\\\"SLACK_BOT_TOKEN\\\")\\n SLACK_APP_TOKEN = os.getenv(\\\"SLACK_APP_TOKEN\\\")\\n OPENAI_API_KEY = os.getenv(\\\"OPENAI_API_KEY\\\")\\n \\n-\\n-\\n # Configure OpenAI API Key\\n openai.api_key = OPENAI_API_KEY\\n \\n # Enable debug logging\\n logging.basicConfig(level=logging.DEBUG)\\n \\n+# Memory storage for last 5 mentions\\n+mention_memory = {}  # Key: channel_id, Value: deque of last 5 mentions\\n \\n # Generate OpenAI embeddings for documents\\n def get_embedding(text):\\n@@ -41,36 +44,54 @@ def get_embedding(text):\\n     )\\n     return np.array(response.data[0].embedding, dtype=np.float32)\\n \\n-\\n # Initialize Slack App\\n app = App(token=SLACK_BOT_TOKEN)\\n \\n # Function to search FAISS\\n-def search_faiss(query):\\n+def search_faiss(query, channel_id):\\n     embeddings = OpenAIEmbeddings()\\n-    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})    \\n+    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})\\n     db = faiss.load_local(folder_path=\\\"./db/coda_linear_github_embeddings.db\\\", embeddings=embeddings, allow_dangerous_deserialization=True)\\n-    \\n+\\n     docs = db.similarity_search(query, k=3)\\n     logging.debug(f\\\"Len docs: {len(docs)}\\\")\\n-      \\n+\\n     docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n     logging.debug(f\\\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\\\")\\n-    prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n \\n+    # Retrieve last 5 messages from memory for this channel\\n+    chat_history = \\\"\\\\n\\\".join(mention_memory.get(channel_id, []))\\n+    logging.debug(f\\\"🔹 Chat History for channel {channel_id}: {chat_history}\\\")\\n \\n     llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n-    response = llm.invoke(prompt.invoke({\\\"question\\\": query, \\\"context\\\": docs_content}))\\n-    \\n-    return response.content\\n+    prompt_template = PromptTemplate(\\n+        input_variables=[\\\"chat_history\\\", \\\"question\\\", \\\"context\\\"],\\n+        template=\\\"{chat_history}\\\\nUser: {question}\\\\nContext: {context}\\\\nAssistant:\\\"\\n+    )\\n+    chain = LLMChain(llm=llm, prompt=prompt_template)\\n+\\n+    response = chain.run(chat_history=chat_history, question=query, context=docs_content)\\n+\\n+    return response  # Fix: LLMChain outputs a string, no need for `.content`\\n+\\n+# Function to store last 5 mentions per channel\\n+def store_mention(channel_id, mention_text):\\n+    if channel_id not in mention_memory:\\n+        mention_memory[channel_id] = deque(maxlen=10)\\n+    mention_memory[channel_id].append(mention_text)\\n+    logging.debug(f\\\"🔹 Updated memory for channel {channel_id}: {list(mention_memory[channel_id])}\\\")\\n \\n # Slack bot listens for messages that mention it\\n @app.event(\\\"app_mention\\\")\\n def handle_mention(event, say):\\n     logging.debug(f\\\"🔹 Received mention event: {event}\\\")  # Debugging log\\n     user_query = event[\\\"text\\\"]\\n-    best_match = search_faiss(user_query)\\n+    channel_id = event[\\\"channel\\\"]\\n+    \\n+    store_mention(channel_id, user_query)  # Store the mention\\n+    best_match = search_faiss(user_query, channel_id)\\n     logging.debug(f\\\"🔹 Best FAISS match: {best_match}\\\")\\n+    \\n     say(f\\\"Best Match: {best_match}\\\")\\n \\n # Start the Slack bot using Socket Mode\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_6.json",
      "patch": "@@ -0,0 +1,416 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/6\",\n+  \"id\": 2371259860,\n+  \"node_id\": \"PR_kwDOOC5crs6NVo3U\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/6\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/6.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/6.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/6\",\n+  \"number\": 6,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"tidy up execute_query params\",\n+  \"user\": {\n+    \"login\": \"cdagraca\",\n+    \"id\": 5451603,\n+    \"node_id\": \"MDQ6VXNlcjU0NTE2MDM=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/5451603?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/cdagraca\",\n+    \"html_url\": \"https://github.com/cdagraca\",\n+    \"followers_url\": \"https://api.github.com/users/cdagraca/followers\",\n+    \"following_url\": \"https://api.github.com/users/cdagraca/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/cdagraca/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/cdagraca/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/cdagraca/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/cdagraca/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/cdagraca/repos\",\n+    \"events_url\": \"https://api.github.com/users/cdagraca/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/cdagraca/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T16:02:12Z\",\n+  \"updated_at\": \"2025-03-04T16:22:45Z\",\n+  \"closed_at\": \"2025-03-04T16:22:45Z\",\n+  \"merged_at\": \"2025-03-04T16:22:45Z\",\n+  \"merge_commit_sha\": \"4541233e737d9d4fc1cb494ac046ba217f874283\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/6/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/6/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/6/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/aed0fcabce3def9462b14ebfb4c587b78f65f69f\",\n+  \"head\": {\n+    \"label\": \"intenthq:function_param_types\",\n+    \"ref\": \"function_param_types\",\n+    \"sha\": \"aed0fcabce3def9462b14ebfb4c587b78f65f69f\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"7b74087e75e8c9b0ee70115e14b30a1892d5d680\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/6\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/6\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/6\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/6/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/6/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/6/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/aed0fcabce3def9462b14ebfb4c587b78f65f69f\"\n+    }\n+  },\n+  \"author_association\": \"COLLABORATOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"javierpedreira\",\n+    \"id\": 7963834,\n+    \"node_id\": \"MDQ6VXNlcjc5NjM4MzQ=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/7963834?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/javierpedreira\",\n+    \"html_url\": \"https://github.com/javierpedreira\",\n+    \"followers_url\": \"https://api.github.com/users/javierpedreira/followers\",\n+    \"following_url\": \"https://api.github.com/users/javierpedreira/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/javierpedreira/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/javierpedreira/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/javierpedreira/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/javierpedreira/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/javierpedreira/repos\",\n+    \"events_url\": \"https://api.github.com/users/javierpedreira/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/javierpedreira/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 2,\n+  \"additions\": 6,\n+  \"deletions\": 5,\n+  \"changed_files\": 4,\n+  \"files\": [\n+    {\n+      \"sha\": \"df61a70fdc4b2f9c5771dcb9163c239573e7b0fd\",\n+      \"filename\": \"db/linear_embeddings.db/index.faiss\",\n+      \"status\": \"added\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/aed0fcabce3def9462b14ebfb4c587b78f65f69f/db%2Flinear_embeddings.db%2Findex.faiss\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/aed0fcabce3def9462b14ebfb4c587b78f65f69f/db%2Flinear_embeddings.db%2Findex.faiss\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Flinear_embeddings.db%2Findex.faiss?ref=aed0fcabce3def9462b14ebfb4c587b78f65f69f\"\n+    },\n+    {\n+      \"sha\": \"f217f3e2b01fe139f4e44801e1c7e9f3b06b7a38\",\n+      \"filename\": \"db/linear_embeddings.db/index.pkl\",\n+      \"status\": \"added\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/aed0fcabce3def9462b14ebfb4c587b78f65f69f/db%2Flinear_embeddings.db%2Findex.pkl\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/aed0fcabce3def9462b14ebfb4c587b78f65f69f/db%2Flinear_embeddings.db%2Findex.pkl\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Flinear_embeddings.db%2Findex.pkl?ref=aed0fcabce3def9462b14ebfb4c587b78f65f69f\"\n+    },\n+    {\n+      \"sha\": \"642a37ced12aeaecda6c6535f444d49caffd30c2\",\n+      \"filename\": \"load_vector_db.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 5,\n+      \"deletions\": 4,\n+      \"changes\": 9,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/aed0fcabce3def9462b14ebfb4c587b78f65f69f/load_vector_db.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/aed0fcabce3def9462b14ebfb4c587b78f65f69f/load_vector_db.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/load_vector_db.py?ref=aed0fcabce3def9462b14ebfb4c587b78f65f69f\",\n+      \"patch\": \"@@ -4,10 +4,11 @@\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n from langchain.embeddings import OpenAIEmbeddings\\n+from typing import Optional\\n \\n \\n # These functions assume os.environ[\\\"OPENAI_API_KEY\\\"] is set\\n-def load_embeddings(source_path:str = \\\"coda_linear_github_embeddings.db\\\"):\\n+def load_embeddings(source_path: str = \\\"coda_linear_github_embeddings.db\\\"):\\n     embeddings = OpenAIEmbeddings()\\n     faiss = FAISS(embedding_function=embeddings,\\n                   index=IndexFlatL2,\\n@@ -18,9 +19,9 @@ def load_embeddings(source_path:str = \\\"coda_linear_github_embeddings.db\\\"):\\n                             allow_dangerous_deserialization=True)\\n \\n \\n-def execute_query(question: str, embeddings:list = None, model:str = \\\"gpt-4\\\"):\\n-    if embeddings is not None and len(embeddings) > 0:\\n-        docs = embeddings.similarity_search(query=question, k=3)\\n+def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: str = \\\"gpt-4\\\"):\\n+    if embeddings_db is not None:\\n+        docs = embeddings_db.similarity_search(query=question, k=3)\\n         docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n     else:\\n         docs_content = \\\"\\\"\"\n+    },\n+    {\n+      \"sha\": \"d9840ae3a5a36956d0265cecca421c4934323e60\",\n+      \"filename\": \"vectorise_data.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 1,\n+      \"deletions\": 1,\n+      \"changes\": 2,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/aed0fcabce3def9462b14ebfb4c587b78f65f69f/vectorise_data.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/aed0fcabce3def9462b14ebfb4c587b78f65f69f/vectorise_data.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/vectorise_data.py?ref=aed0fcabce3def9462b14ebfb4c587b78f65f69f\",\n+      \"patch\": \"@@ -21,7 +21,7 @@\\n         if folder == \\\"coda\\\":\\n             # Strip out the encoded images\\n             for d in data:\\n-                d.page_content = re.sub(\\\"(\\\\[|\\\\()data:image.+(\\\\]|\\\\))\\\", \\\"\\\", d.page_content)\\n+                d.page_content = re.sub(\\\"[\\\\[\\\\(]data:image.+[\\\\]\\\\)]\\\", \\\"\\\", d.page_content)\\n         docs += text_splitter.split_documents(data)\\n \\n embeddings = OpenAIEmbeddings()\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/db/linear_embeddings.db/index.faiss b/db/linear_embeddings.db/index.faiss\\nnew file mode 100644\\nindex 0000000..df61a70\\nBinary files /dev/null and b/db/linear_embeddings.db/index.faiss differ\\ndiff --git a/db/linear_embeddings.db/index.pkl b/db/linear_embeddings.db/index.pkl\\nnew file mode 100644\\nindex 0000000..f217f3e\\nBinary files /dev/null and b/db/linear_embeddings.db/index.pkl differ\\ndiff --git a/load_vector_db.py b/load_vector_db.py\\nindex 0ede00e..642a37c 100644\\n--- a/load_vector_db.py\\n+++ b/load_vector_db.py\\n@@ -4,10 +4,11 @@\\n from langchain_community.docstore.in_memory import InMemoryDocstore\\n from langchain_community.vectorstores import FAISS\\n from langchain.embeddings import OpenAIEmbeddings\\n+from typing import Optional\\n \\n \\n # These functions assume os.environ[\\\"OPENAI_API_KEY\\\"] is set\\n-def load_embeddings(source_path:str = \\\"coda_linear_github_embeddings.db\\\"):\\n+def load_embeddings(source_path: str = \\\"coda_linear_github_embeddings.db\\\"):\\n     embeddings = OpenAIEmbeddings()\\n     faiss = FAISS(embedding_function=embeddings,\\n                   index=IndexFlatL2,\\n@@ -18,9 +19,9 @@ def load_embeddings(source_path:str = \\\"coda_linear_github_embeddings.db\\\"):\\n                             allow_dangerous_deserialization=True)\\n \\n \\n-def execute_query(question: str, embeddings:list = None, model:str = \\\"gpt-4\\\"):\\n-    if embeddings is not None and len(embeddings) > 0:\\n-        docs = embeddings.similarity_search(query=question, k=3)\\n+def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: str = \\\"gpt-4\\\"):\\n+    if embeddings_db is not None:\\n+        docs = embeddings_db.similarity_search(query=question, k=3)\\n         docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n     else:\\n         docs_content = \\\"\\\"\\ndiff --git a/vectorise_data.py b/vectorise_data.py\\nindex 5fd0741..d9840ae 100644\\n--- a/vectorise_data.py\\n+++ b/vectorise_data.py\\n@@ -21,7 +21,7 @@\\n         if folder == \\\"coda\\\":\\n             # Strip out the encoded images\\n             for d in data:\\n-                d.page_content = re.sub(\\\"(\\\\[|\\\\()data:image.+(\\\\]|\\\\))\\\", \\\"\\\", d.page_content)\\n+                d.page_content = re.sub(\\\"[\\\\[\\\\(]data:image.+[\\\\]\\\\)]\\\", \\\"\\\", d.page_content)\\n         docs += text_splitter.split_documents(data)\\n \\n embeddings = OpenAIEmbeddings()\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_7.json",
      "patch": "@@ -0,0 +1,448 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/7\",\n+  \"id\": 2371386816,\n+  \"node_id\": \"PR_kwDOOC5crs6NWH3A\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/7\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/7.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/7.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/7\",\n+  \"number\": 7,\n+  \"state\": \"closed\",\n+  \"locked\": false,\n+  \"title\": \"Source specific databases\",\n+  \"user\": {\n+    \"login\": \"cdagraca\",\n+    \"id\": 5451603,\n+    \"node_id\": \"MDQ6VXNlcjU0NTE2MDM=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/5451603?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/cdagraca\",\n+    \"html_url\": \"https://github.com/cdagraca\",\n+    \"followers_url\": \"https://api.github.com/users/cdagraca/followers\",\n+    \"following_url\": \"https://api.github.com/users/cdagraca/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/cdagraca/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/cdagraca/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/cdagraca/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/cdagraca/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/cdagraca/repos\",\n+    \"events_url\": \"https://api.github.com/users/cdagraca/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/cdagraca/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T16:54:29Z\",\n+  \"updated_at\": \"2025-03-04T16:54:44Z\",\n+  \"closed_at\": \"2025-03-04T16:54:38Z\",\n+  \"merged_at\": \"2025-03-04T16:54:38Z\",\n+  \"merge_commit_sha\": \"b1c20f7f0a1c7e8896177a425a04f3973b89bed2\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/7/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/7/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/7/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/5a0d0d9bda757976676bc8136a7cdaf4b385fffb\",\n+  \"head\": {\n+    \"label\": \"intenthq:source_specific_databases\",\n+    \"ref\": \"source_specific_databases\",\n+    \"sha\": \"5a0d0d9bda757976676bc8136a7cdaf4b385fffb\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"4541233e737d9d4fc1cb494ac046ba217f874283\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/7\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/7\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/7\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/7/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/7/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/7/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    }\n+  },\n+  \"author_association\": \"COLLABORATOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": true,\n+  \"mergeable\": null,\n+  \"rebaseable\": null,\n+  \"mergeable_state\": \"unknown\",\n+  \"merged_by\": {\n+    \"login\": \"cdagraca\",\n+    \"id\": 5451603,\n+    \"node_id\": \"MDQ6VXNlcjU0NTE2MDM=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/5451603?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/cdagraca\",\n+    \"html_url\": \"https://github.com/cdagraca\",\n+    \"followers_url\": \"https://api.github.com/users/cdagraca/followers\",\n+    \"following_url\": \"https://api.github.com/users/cdagraca/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/cdagraca/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/cdagraca/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/cdagraca/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/cdagraca/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/cdagraca/repos\",\n+    \"events_url\": \"https://api.github.com/users/cdagraca/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/cdagraca/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 2,\n+  \"additions\": 4,\n+  \"deletions\": 4,\n+  \"changed_files\": 7,\n+  \"files\": [\n+    {\n+      \"sha\": \"4cebdc6036c766e03b885ee0c229343d9b2acfa9\",\n+      \"filename\": \"db/coda_embeddings.db/index.faiss\",\n+      \"status\": \"added\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fcoda_embeddings.db%2Findex.faiss\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fcoda_embeddings.db%2Findex.faiss\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Fcoda_embeddings.db%2Findex.faiss?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    },\n+    {\n+      \"sha\": \"f52c7bb52c787350d26b7c73f6857705f822acd4\",\n+      \"filename\": \"db/coda_embeddings.db/index.pkl\",\n+      \"status\": \"added\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fcoda_embeddings.db%2Findex.pkl\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fcoda_embeddings.db%2Findex.pkl\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Fcoda_embeddings.db%2Findex.pkl?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    },\n+    {\n+      \"sha\": \"8c587a8d919fe89d8836c6a3b8c7070e8ea49865\",\n+      \"filename\": \"db/github_embeddings.db/index.faiss\",\n+      \"status\": \"added\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fgithub_embeddings.db%2Findex.faiss\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fgithub_embeddings.db%2Findex.faiss\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Fgithub_embeddings.db%2Findex.faiss?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    },\n+    {\n+      \"sha\": \"9cc3a34589853a3ff3b562c50008bd46e71914f4\",\n+      \"filename\": \"db/github_embeddings.db/index.pkl\",\n+      \"status\": \"added\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fgithub_embeddings.db%2Findex.pkl\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Fgithub_embeddings.db%2Findex.pkl\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Fgithub_embeddings.db%2Findex.pkl?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    },\n+    {\n+      \"sha\": \"c8efe6d2c52ef9083e97d76bd6d0cb866b92996d\",\n+      \"filename\": \"db/linear_embeddings.db/index.faiss\",\n+      \"status\": \"modified\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Flinear_embeddings.db%2Findex.faiss\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Flinear_embeddings.db%2Findex.faiss\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Flinear_embeddings.db%2Findex.faiss?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    },\n+    {\n+      \"sha\": \"630ea2e7e2d9ff707b2afd182812d5a7c07f898c\",\n+      \"filename\": \"db/linear_embeddings.db/index.pkl\",\n+      \"status\": \"modified\",\n+      \"additions\": 0,\n+      \"deletions\": 0,\n+      \"changes\": 0,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Flinear_embeddings.db%2Findex.pkl\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/db%2Flinear_embeddings.db%2Findex.pkl\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/db%2Flinear_embeddings.db%2Findex.pkl?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\"\n+    },\n+    {\n+      \"sha\": \"c11f9881f63b3d7090c4efd679e3a90c75a3a051\",\n+      \"filename\": \"vectorise_data.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 4,\n+      \"deletions\": 4,\n+      \"changes\": 8,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/vectorise_data.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/5a0d0d9bda757976676bc8136a7cdaf4b385fffb/vectorise_data.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/vectorise_data.py?ref=5a0d0d9bda757976676bc8136a7cdaf4b385fffb\",\n+      \"patch\": \"@@ -13,8 +13,8 @@\\n \\n text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=200)\\n \\n-docs = []\\n for folder in data_folders:\\n+    docs = []\\n     for file in os.listdir(f\\\"{file_base_path}/{folder}\\\"):\\n         loader = TextLoader(file_path=f\\\"{file_base_path}/{folder}/{file}\\\", encoding=\\\"utf-8\\\")\\n         data = loader.load()\\n@@ -24,6 +24,6 @@\\n                 d.page_content = re.sub(\\\"[\\\\[\\\\(]data:image.+[\\\\]\\\\)]\\\", \\\"\\\", d.page_content)\\n         docs += text_splitter.split_documents(data)\\n \\n-embeddings = OpenAIEmbeddings()\\n-vectorstore = FAISS.from_documents(docs, embedding=embeddings)\\n-vectorstore.save_local(\\\"./db/coda_linear_github_embeddings.db\\\")\\n+        embeddings = OpenAIEmbeddings()\\n+        vectorstore = FAISS.from_documents(docs, embedding=embeddings)\\n+        vectorstore.save_local(f\\\"./db/{folder}_embeddings.db\\\")\\n\\\\ No newline at end of file\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/db/coda_embeddings.db/index.faiss b/db/coda_embeddings.db/index.faiss\\nnew file mode 100644\\nindex 0000000..4cebdc6\\nBinary files /dev/null and b/db/coda_embeddings.db/index.faiss differ\\ndiff --git a/db/coda_embeddings.db/index.pkl b/db/coda_embeddings.db/index.pkl\\nnew file mode 100644\\nindex 0000000..f52c7bb\\nBinary files /dev/null and b/db/coda_embeddings.db/index.pkl differ\\ndiff --git a/db/github_embeddings.db/index.faiss b/db/github_embeddings.db/index.faiss\\nnew file mode 100644\\nindex 0000000..8c587a8\\nBinary files /dev/null and b/db/github_embeddings.db/index.faiss differ\\ndiff --git a/db/github_embeddings.db/index.pkl b/db/github_embeddings.db/index.pkl\\nnew file mode 100644\\nindex 0000000..9cc3a34\\nBinary files /dev/null and b/db/github_embeddings.db/index.pkl differ\\ndiff --git a/db/linear_embeddings.db/index.faiss b/db/linear_embeddings.db/index.faiss\\nindex df61a70..c8efe6d 100644\\nBinary files a/db/linear_embeddings.db/index.faiss and b/db/linear_embeddings.db/index.faiss differ\\ndiff --git a/db/linear_embeddings.db/index.pkl b/db/linear_embeddings.db/index.pkl\\nindex f217f3e..630ea2e 100644\\nBinary files a/db/linear_embeddings.db/index.pkl and b/db/linear_embeddings.db/index.pkl differ\\ndiff --git a/vectorise_data.py b/vectorise_data.py\\nindex d9840ae..c11f988 100644\\n--- a/vectorise_data.py\\n+++ b/vectorise_data.py\\n@@ -13,8 +13,8 @@\\n \\n text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=200)\\n \\n-docs = []\\n for folder in data_folders:\\n+    docs = []\\n     for file in os.listdir(f\\\"{file_base_path}/{folder}\\\"):\\n         loader = TextLoader(file_path=f\\\"{file_base_path}/{folder}/{file}\\\", encoding=\\\"utf-8\\\")\\n         data = loader.load()\\n@@ -24,6 +24,6 @@\\n                 d.page_content = re.sub(\\\"[\\\\[\\\\(]data:image.+[\\\\]\\\\)]\\\", \\\"\\\", d.page_content)\\n         docs += text_splitter.split_documents(data)\\n \\n-embeddings = OpenAIEmbeddings()\\n-vectorstore = FAISS.from_documents(docs, embedding=embeddings)\\n-vectorstore.save_local(\\\"./db/coda_linear_github_embeddings.db\\\")\\n+        embeddings = OpenAIEmbeddings()\\n+        vectorstore = FAISS.from_documents(docs, embedding=embeddings)\\n+        vectorstore.save_local(f\\\"./db/{folder}_embeddings.db\\\")\\n\\\\ No newline at end of file\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_8.json",
      "patch": "@@ -0,0 +1,374 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/8\",\n+  \"id\": 2371473328,\n+  \"node_id\": \"PR_kwDOOC5crs6NWc-w\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/8\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/8.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/8.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/8\",\n+  \"number\": 8,\n+  \"state\": \"open\",\n+  \"locked\": false,\n+  \"title\": \"Added function calling to create linear ticket and removed langchain …\",\n+  \"user\": {\n+    \"login\": \"geo-harrison\",\n+    \"id\": 176415250,\n+    \"node_id\": \"U_kgDOCoPiEg\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/176415250?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/geo-harrison\",\n+    \"html_url\": \"https://github.com/geo-harrison\",\n+    \"followers_url\": \"https://api.github.com/users/geo-harrison/followers\",\n+    \"following_url\": \"https://api.github.com/users/geo-harrison/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/geo-harrison/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/geo-harrison/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/geo-harrison/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/geo-harrison/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/geo-harrison/repos\",\n+    \"events_url\": \"https://api.github.com/users/geo-harrison/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/geo-harrison/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": \"…logic to openai\",\n+  \"created_at\": \"2025-03-04T17:36:25Z\",\n+  \"updated_at\": \"2025-03-04T17:38:17Z\",\n+  \"closed_at\": null,\n+  \"merged_at\": null,\n+  \"merge_commit_sha\": \"d7cb9c16ba70d5f3cd4ded7c170d1fa00d9d2048\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/8/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/8/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/8/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/2e964f22deb60da0538c6a6c54e35386338500ca\",\n+  \"head\": {\n+    \"label\": \"intenthq:linear-ticket-creation\",\n+    \"ref\": \"linear-ticket-creation\",\n+    \"sha\": \"2e964f22deb60da0538c6a6c54e35386338500ca\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"b1c20f7f0a1c7e8896177a425a04f3973b89bed2\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/8\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/8\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/8\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/8/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/8/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/8/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/2e964f22deb60da0538c6a6c54e35386338500ca\"\n+    }\n+  },\n+  \"author_association\": \"COLLABORATOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": false,\n+  \"mergeable\": true,\n+  \"rebaseable\": true,\n+  \"mergeable_state\": \"clean\",\n+  \"merged_by\": null,\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 2,\n+  \"additions\": 157,\n+  \"deletions\": 9,\n+  \"changed_files\": 2,\n+  \"files\": [\n+    {\n+      \"sha\": \"c0d0339f1e246189d392a18b119f1cb66b0f1adf\",\n+      \"filename\": \"llm_tools.py\",\n+      \"status\": \"added\",\n+      \"additions\": 102,\n+      \"deletions\": 0,\n+      \"changes\": 102,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/2e964f22deb60da0538c6a6c54e35386338500ca/llm_tools.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/2e964f22deb60da0538c6a6c54e35386338500ca/llm_tools.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/llm_tools.py?ref=2e964f22deb60da0538c6a6c54e35386338500ca\",\n+      \"patch\": \"@@ -0,0 +1,102 @@\\n+import os\\n+import json\\n+import requests\\n+from openai import OpenAI\\n+\\n+# Define the function to create a Linear ticket\\n+def create_linear_ticket(title: str, description: str, priority: int, linear_api_key: str) -> dict:\\n+    \\\"\\\"\\\"\\n+    Creates a new Linear ticket using the given title, description, and priority.\\n+\\n+    Args:\\n+        title (str): The title of the Linear ticket.\\n+        description (str): A detailed description of the ticket.\\n+        priority (int): Priority level (0 = No priority, 1 = Low, 2 = Medium, 3 = High, 4 = Urgent).\\n+\\n+    Returns:\\n+        dict: A dictionary containing ticket details formatted for Linear API.\\n+    \\\"\\\"\\\"\\n+    TEAM_ID = '16b9a385-762f-47b0-b5d8-73ece3125bd9'\\n+    API_URL = 'https://api.linear.app/graphql'\\n+    headers = {\\n+        'Authorization': linear_api_key,\\n+        'Content-Type': 'application/json'\\n+    }\\n+\\n+    issue_data = {\\n+        \\\"title\\\": title,\\n+        \\\"description\\\": description,\\n+        \\\"teamId\\\": TEAM_ID,\\n+        \\\"priority\\\": priority\\n+    }\\n+\\n+    # GraphQL mutation for creating an issue\\n+    mutation = \\\"\\\"\\\"\\n+    mutation CreateIssue($input: IssueCreateInput!) {\\n+      issueCreate(input: $input) {\\n+        success\\n+        issue {\\n+          id\\n+          title\\n+          description\\n+          url\\n+        }\\n+      }\\n+    }\\n+    \\\"\\\"\\\"\\n+\\n+    # Make the API request\\n+    response = requests.post(\\n+        API_URL,\\n+        json={\\\"query\\\": mutation, \\\"variables\\\": {\\\"input\\\": issue_data}},\\n+        headers=headers\\n+    )\\n+\\n+    if response.status_code == 200:\\n+        data = response.json()\\n+        if data.get('data', {}).get('issueCreate', {}).get('success'):\\n+            issue = data['data']['issueCreate']['issue']\\n+            return {\\n+                \\\"success\\\": True,\\n+                \\\"issue\\\": {\\n+                    \\\"id\\\": issue['id'],\\n+                    \\\"title\\\": issue['title'],\\n+                    \\\"description\\\": issue['description'],\\n+                    \\\"url\\\": issue['url']\\n+                }\\n+            }\\n+        else:\\n+            return {\\\"success\\\": False, \\\"error\\\": \\\"Issue creation failed.\\\"}\\n+    else:\\n+        return {\\\"success\\\": False, \\\"error\\\": response.text}\\n+\\n+# Define the function specification for OpenAI\\n+tools = [\\n+    {\\n+        \\\"type\\\": \\\"function\\\",  # Specify the type as 'function'\\n+        \\\"function\\\": {\\n+            \\\"name\\\": \\\"create_linear_ticket\\\",\\n+            \\\"description\\\": \\\"Creates a new Linear ticket with the given title, description, and priority.\\\",\\n+            \\\"parameters\\\": {\\n+                \\\"type\\\": \\\"object\\\",\\n+                \\\"properties\\\": {\\n+                    \\\"title\\\": {\\n+                        \\\"type\\\": \\\"string\\\",\\n+                        \\\"description\\\": \\\"The title of the Linear ticket\\\"\\n+                    },\\n+                    \\\"description\\\": {\\n+                        \\\"type\\\": \\\"string\\\",\\n+                        \\\"description\\\": \\\"A detailed description of the issue or task.\\\"\\n+                    },\\n+                    \\\"priority\\\": {\\n+                        \\\"type\\\": \\\"integer\\\",\\n+                        \\\"description\\\": \\\"The priority level of the issue. (0 = No priority, 1 = Low, 2 = Medium, 3 = High, 4 = Urgent)\\\",\\n+                        \\\"enum\\\": [0, 1, 2, 3, 4]\\n+                    }\\n+                },\\n+                \\\"required\\\": [\\\"title\\\", \\\"description\\\", \\\"priority\\\"]\\n+            }\\n+        }\\n+    }\\n+]\\n+\"\n+    },\n+    {\n+      \"sha\": \"36a48ec56d4e723976d06e2d45059ff233aeacba\",\n+      \"filename\": \"slack_faiss_bot.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 55,\n+      \"deletions\": 9,\n+      \"changes\": 64,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/2e964f22deb60da0538c6a6c54e35386338500ca/slack_faiss_bot.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/2e964f22deb60da0538c6a6c54e35386338500ca/slack_faiss_bot.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/slack_faiss_bot.py?ref=2e964f22deb60da0538c6a6c54e35386338500ca\",\n+      \"patch\": \"@@ -1,4 +1,5 @@\\n import os\\n+import json\\n import faiss\\n import numpy as np\\n import openai\\n@@ -16,6 +17,9 @@\\n from langchain.chains import LLMChain\\n from langchain.prompts import PromptTemplate\\n \\n+from openai import OpenAI\\n+from llm_tools import create_linear_ticket, tools \\n+\\n # Load environment variables from .env file\\n load_dotenv()\\n \\n@@ -27,9 +31,12 @@\\n SLACK_BOT_TOKEN = os.getenv(\\\"SLACK_BOT_TOKEN\\\")\\n SLACK_APP_TOKEN = os.getenv(\\\"SLACK_APP_TOKEN\\\")\\n OPENAI_API_KEY = os.getenv(\\\"OPENAI_API_KEY\\\")\\n+LINEAR_API_KEY = os.environ.get(\\\"LINEAR_API_KEY\\\")\\n+OPENAI_API_KEY = os.environ.get(\\\"OPENAI_API_KEY\\\")\\n \\n # Configure OpenAI API Key\\n openai.api_key = OPENAI_API_KEY\\n+client = OpenAI()\\n \\n # Enable debug logging\\n logging.basicConfig(level=logging.DEBUG)\\n@@ -47,6 +54,40 @@ def get_embedding(text):\\n # Initialize Slack App\\n app = App(token=SLACK_BOT_TOKEN)\\n \\n+def parse_chat_history(chat_history_raw):\\n+    chat_history = []\\n+    for message in chat_history_raw:\\n+        chat_history.append({\\\"role\\\": \\\"user\\\", \\\"content\\\": message})\\n+    return chat_history\\n+\\n+def get_prompt_messages(chat_history, question, context):\\n+    messages = [\\n+        {\\\"role\\\": \\\"developer\\\", \\\"content\\\": \\\"You are a helpful assistant.\\\"}, # update this system prompt more\\n+    ]\\n+    messages.extend(chat_history)\\n+    messages.extend({\\\"role\\\": \\\"developer\\\", \\\"content\\\": f\\\"This is the relevant context for you to answer the users query: {context}\\\"})\\n+    messages.extend({\\\"role\\\": \\\"user\\\", \\\"content\\\": question})\\n+    return messages\\n+\\n+def chat_openai(messages, tools, model=\\\"gpt-4o-mini\\\"):\\n+    response = client.chat.completions.create(\\n+        model=model,\\n+        messages=messages,\\n+        tools=tools\\n+    )\\n+    return response.choices[0].message\\n+\\n+def implement_linear_function(function_args):\\n+    function_args = json.loads(function_args)\\n+    result = create_linear_ticket(\\n+        title=function_args.get(\\\"title\\\"),\\n+        description=function_args.get(\\\"description\\\"),\\n+        priority=function_args.get(\\\"priority\\\"),\\n+        linear_api_key=LINEAR_API_KEY\\n+    )\\n+    second_message = f\\\"A ticket as been created here: {result['issue']['url']}\\\"\\n+    return second_message\\n+\\n # Function to search FAISS\\n def search_faiss(query, channel_id):\\n     embeddings = OpenAIEmbeddings()\\n@@ -60,17 +101,22 @@ def search_faiss(query, channel_id):\\n     logging.debug(f\\\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\\\")\\n \\n     # Retrieve last 5 messages from memory for this channel\\n-    chat_history = \\\"\\\\n\\\".join(mention_memory.get(channel_id, []))\\n+    # chat_history = \\\"\\\\n\\\".join(mention_memory.get(channel_id, []))\\n+    chat_history = mention_memory.get(channel_id, [])\\n+    chat_history = parse_chat_history(chat_history)\\n     logging.debug(f\\\"🔹 Chat History for channel {channel_id}: {chat_history}\\\")\\n \\n-    llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n-    prompt_template = PromptTemplate(\\n-        input_variables=[\\\"chat_history\\\", \\\"question\\\", \\\"context\\\"],\\n-        template=\\\"{chat_history}\\\\nUser: {question}\\\\nContext: {context}\\\\nAssistant:\\\"\\n-    )\\n-    chain = LLMChain(llm=llm, prompt=prompt_template)\\n-\\n-    response = chain.run(chat_history=chat_history, question=query, context=docs_content)\\n+    messages = get_prompt_messages(chat_history, query, docs_content)\\n+    response = chat_openai(messages, tools)\\n+\\n+    if response.tool_calls != None:\\n+        function_name = response.tool_calls[0].function.name\\n+        function_args = response.tool_calls[0].function.arguments\\n+        if function_name == \\\"create_linear_ticket\\\":\\n+            try:\\n+                response = implement_linear_function(function_args)\\n+            except:\\n+                response = \\\"Sorry failed to create a ticket (still learning!) - can you ask again?\\\"\\n \\n     return response  # Fix: LLMChain outputs a string, no need for `.content`\\n \"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/llm_tools.py b/llm_tools.py\\nnew file mode 100644\\nindex 0000000..c0d0339\\n--- /dev/null\\n+++ b/llm_tools.py\\n@@ -0,0 +1,102 @@\\n+import os\\n+import json\\n+import requests\\n+from openai import OpenAI\\n+\\n+# Define the function to create a Linear ticket\\n+def create_linear_ticket(title: str, description: str, priority: int, linear_api_key: str) -> dict:\\n+    \\\"\\\"\\\"\\n+    Creates a new Linear ticket using the given title, description, and priority.\\n+\\n+    Args:\\n+        title (str): The title of the Linear ticket.\\n+        description (str): A detailed description of the ticket.\\n+        priority (int): Priority level (0 = No priority, 1 = Low, 2 = Medium, 3 = High, 4 = Urgent).\\n+\\n+    Returns:\\n+        dict: A dictionary containing ticket details formatted for Linear API.\\n+    \\\"\\\"\\\"\\n+    TEAM_ID = '16b9a385-762f-47b0-b5d8-73ece3125bd9'\\n+    API_URL = 'https://api.linear.app/graphql'\\n+    headers = {\\n+        'Authorization': linear_api_key,\\n+        'Content-Type': 'application/json'\\n+    }\\n+\\n+    issue_data = {\\n+        \\\"title\\\": title,\\n+        \\\"description\\\": description,\\n+        \\\"teamId\\\": TEAM_ID,\\n+        \\\"priority\\\": priority\\n+    }\\n+\\n+    # GraphQL mutation for creating an issue\\n+    mutation = \\\"\\\"\\\"\\n+    mutation CreateIssue($input: IssueCreateInput!) {\\n+      issueCreate(input: $input) {\\n+        success\\n+        issue {\\n+          id\\n+          title\\n+          description\\n+          url\\n+        }\\n+      }\\n+    }\\n+    \\\"\\\"\\\"\\n+\\n+    # Make the API request\\n+    response = requests.post(\\n+        API_URL,\\n+        json={\\\"query\\\": mutation, \\\"variables\\\": {\\\"input\\\": issue_data}},\\n+        headers=headers\\n+    )\\n+\\n+    if response.status_code == 200:\\n+        data = response.json()\\n+        if data.get('data', {}).get('issueCreate', {}).get('success'):\\n+            issue = data['data']['issueCreate']['issue']\\n+            return {\\n+                \\\"success\\\": True,\\n+                \\\"issue\\\": {\\n+                    \\\"id\\\": issue['id'],\\n+                    \\\"title\\\": issue['title'],\\n+                    \\\"description\\\": issue['description'],\\n+                    \\\"url\\\": issue['url']\\n+                }\\n+            }\\n+        else:\\n+            return {\\\"success\\\": False, \\\"error\\\": \\\"Issue creation failed.\\\"}\\n+    else:\\n+        return {\\\"success\\\": False, \\\"error\\\": response.text}\\n+\\n+# Define the function specification for OpenAI\\n+tools = [\\n+    {\\n+        \\\"type\\\": \\\"function\\\",  # Specify the type as 'function'\\n+        \\\"function\\\": {\\n+            \\\"name\\\": \\\"create_linear_ticket\\\",\\n+            \\\"description\\\": \\\"Creates a new Linear ticket with the given title, description, and priority.\\\",\\n+            \\\"parameters\\\": {\\n+                \\\"type\\\": \\\"object\\\",\\n+                \\\"properties\\\": {\\n+                    \\\"title\\\": {\\n+                        \\\"type\\\": \\\"string\\\",\\n+                        \\\"description\\\": \\\"The title of the Linear ticket\\\"\\n+                    },\\n+                    \\\"description\\\": {\\n+                        \\\"type\\\": \\\"string\\\",\\n+                        \\\"description\\\": \\\"A detailed description of the issue or task.\\\"\\n+                    },\\n+                    \\\"priority\\\": {\\n+                        \\\"type\\\": \\\"integer\\\",\\n+                        \\\"description\\\": \\\"The priority level of the issue. (0 = No priority, 1 = Low, 2 = Medium, 3 = High, 4 = Urgent)\\\",\\n+                        \\\"enum\\\": [0, 1, 2, 3, 4]\\n+                    }\\n+                },\\n+                \\\"required\\\": [\\\"title\\\", \\\"description\\\", \\\"priority\\\"]\\n+            }\\n+        }\\n+    }\\n+]\\n+\\ndiff --git a/slack_faiss_bot.py b/slack_faiss_bot.py\\nindex 21fa2a2..36a48ec 100644\\n--- a/slack_faiss_bot.py\\n+++ b/slack_faiss_bot.py\\n@@ -1,4 +1,5 @@\\n import os\\n+import json\\n import faiss\\n import numpy as np\\n import openai\\n@@ -16,6 +17,9 @@\\n from langchain.chains import LLMChain\\n from langchain.prompts import PromptTemplate\\n \\n+from openai import OpenAI\\n+from llm_tools import create_linear_ticket, tools \\n+\\n # Load environment variables from .env file\\n load_dotenv()\\n \\n@@ -27,9 +31,12 @@\\n SLACK_BOT_TOKEN = os.getenv(\\\"SLACK_BOT_TOKEN\\\")\\n SLACK_APP_TOKEN = os.getenv(\\\"SLACK_APP_TOKEN\\\")\\n OPENAI_API_KEY = os.getenv(\\\"OPENAI_API_KEY\\\")\\n+LINEAR_API_KEY = os.environ.get(\\\"LINEAR_API_KEY\\\")\\n+OPENAI_API_KEY = os.environ.get(\\\"OPENAI_API_KEY\\\")\\n \\n # Configure OpenAI API Key\\n openai.api_key = OPENAI_API_KEY\\n+client = OpenAI()\\n \\n # Enable debug logging\\n logging.basicConfig(level=logging.DEBUG)\\n@@ -47,6 +54,40 @@ def get_embedding(text):\\n # Initialize Slack App\\n app = App(token=SLACK_BOT_TOKEN)\\n \\n+def parse_chat_history(chat_history_raw):\\n+    chat_history = []\\n+    for message in chat_history_raw:\\n+        chat_history.append({\\\"role\\\": \\\"user\\\", \\\"content\\\": message})\\n+    return chat_history\\n+\\n+def get_prompt_messages(chat_history, question, context):\\n+    messages = [\\n+        {\\\"role\\\": \\\"developer\\\", \\\"content\\\": \\\"You are a helpful assistant.\\\"}, # update this system prompt more\\n+    ]\\n+    messages.extend(chat_history)\\n+    messages.extend({\\\"role\\\": \\\"developer\\\", \\\"content\\\": f\\\"This is the relevant context for you to answer the users query: {context}\\\"})\\n+    messages.extend({\\\"role\\\": \\\"user\\\", \\\"content\\\": question})\\n+    return messages\\n+\\n+def chat_openai(messages, tools, model=\\\"gpt-4o-mini\\\"):\\n+    response = client.chat.completions.create(\\n+        model=model,\\n+        messages=messages,\\n+        tools=tools\\n+    )\\n+    return response.choices[0].message\\n+\\n+def implement_linear_function(function_args):\\n+    function_args = json.loads(function_args)\\n+    result = create_linear_ticket(\\n+        title=function_args.get(\\\"title\\\"),\\n+        description=function_args.get(\\\"description\\\"),\\n+        priority=function_args.get(\\\"priority\\\"),\\n+        linear_api_key=LINEAR_API_KEY\\n+    )\\n+    second_message = f\\\"A ticket as been created here: {result['issue']['url']}\\\"\\n+    return second_message\\n+\\n # Function to search FAISS\\n def search_faiss(query, channel_id):\\n     embeddings = OpenAIEmbeddings()\\n@@ -60,17 +101,22 @@ def search_faiss(query, channel_id):\\n     logging.debug(f\\\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\\\")\\n \\n     # Retrieve last 5 messages from memory for this channel\\n-    chat_history = \\\"\\\\n\\\".join(mention_memory.get(channel_id, []))\\n+    # chat_history = \\\"\\\\n\\\".join(mention_memory.get(channel_id, []))\\n+    chat_history = mention_memory.get(channel_id, [])\\n+    chat_history = parse_chat_history(chat_history)\\n     logging.debug(f\\\"🔹 Chat History for channel {channel_id}: {chat_history}\\\")\\n \\n-    llm = init_chat_model(\\\"gpt-4\\\", model_provider=\\\"openai\\\")\\n-    prompt_template = PromptTemplate(\\n-        input_variables=[\\\"chat_history\\\", \\\"question\\\", \\\"context\\\"],\\n-        template=\\\"{chat_history}\\\\nUser: {question}\\\\nContext: {context}\\\\nAssistant:\\\"\\n-    )\\n-    chain = LLMChain(llm=llm, prompt=prompt_template)\\n-\\n-    response = chain.run(chat_history=chat_history, question=query, context=docs_content)\\n+    messages = get_prompt_messages(chat_history, query, docs_content)\\n+    response = chat_openai(messages, tools)\\n+\\n+    if response.tool_calls != None:\\n+        function_name = response.tool_calls[0].function.name\\n+        function_args = response.tool_calls[0].function.arguments\\n+        if function_name == \\\"create_linear_ticket\\\":\\n+            try:\\n+                response = implement_linear_function(function_args)\\n+            except:\\n+                response = \\\"Sorry failed to create a ticket (still learning!) - can you ask again?\\\"\\n \\n     return response  # Fix: LLMChain outputs a string, no need for `.content`\\n \\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "documents/github/intenthq/ihq_assistant/pr_9.json",
      "patch": "@@ -0,0 +1,363 @@\n+{\n+  \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/9\",\n+  \"id\": 2371568600,\n+  \"node_id\": \"PR_kwDOOC5crs6NW0PY\",\n+  \"html_url\": \"https://github.com/intenthq/ihq_assistant/pull/9\",\n+  \"diff_url\": \"https://github.com/intenthq/ihq_assistant/pull/9.diff\",\n+  \"patch_url\": \"https://github.com/intenthq/ihq_assistant/pull/9.patch\",\n+  \"issue_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/9\",\n+  \"number\": 9,\n+  \"state\": \"open\",\n+  \"locked\": false,\n+  \"title\": \"choose one specific embeddings source to use as context\",\n+  \"user\": {\n+    \"login\": \"cdagraca\",\n+    \"id\": 5451603,\n+    \"node_id\": \"MDQ6VXNlcjU0NTE2MDM=\",\n+    \"avatar_url\": \"https://avatars.githubusercontent.com/u/5451603?v=4\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://api.github.com/users/cdagraca\",\n+    \"html_url\": \"https://github.com/cdagraca\",\n+    \"followers_url\": \"https://api.github.com/users/cdagraca/followers\",\n+    \"following_url\": \"https://api.github.com/users/cdagraca/following{/other_user}\",\n+    \"gists_url\": \"https://api.github.com/users/cdagraca/gists{/gist_id}\",\n+    \"starred_url\": \"https://api.github.com/users/cdagraca/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://api.github.com/users/cdagraca/subscriptions\",\n+    \"organizations_url\": \"https://api.github.com/users/cdagraca/orgs\",\n+    \"repos_url\": \"https://api.github.com/users/cdagraca/repos\",\n+    \"events_url\": \"https://api.github.com/users/cdagraca/events{/privacy}\",\n+    \"received_events_url\": \"https://api.github.com/users/cdagraca/received_events\",\n+    \"type\": \"User\",\n+    \"user_view_type\": \"public\",\n+    \"site_admin\": false\n+  },\n+  \"body\": null,\n+  \"created_at\": \"2025-03-04T18:29:31Z\",\n+  \"updated_at\": \"2025-03-04T18:46:19Z\",\n+  \"closed_at\": null,\n+  \"merged_at\": null,\n+  \"merge_commit_sha\": \"22b1afd56250588a43fabfc6d9b44c938ac61ac9\",\n+  \"assignee\": null,\n+  \"assignees\": [],\n+  \"requested_reviewers\": [],\n+  \"requested_teams\": [],\n+  \"labels\": [],\n+  \"milestone\": null,\n+  \"draft\": false,\n+  \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/9/commits\",\n+  \"review_comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/9/comments\",\n+  \"review_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\",\n+  \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/9/comments\",\n+  \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/77189e6a5c0ed620a966d4b608f22a7bd6317578\",\n+  \"head\": {\n+    \"label\": \"intenthq:query_by_source\",\n+    \"ref\": \"query_by_source\",\n+    \"sha\": \"77189e6a5c0ed620a966d4b608f22a7bd6317578\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"base\": {\n+    \"label\": \"intenthq:main\",\n+    \"ref\": \"main\",\n+    \"sha\": \"b1c20f7f0a1c7e8896177a425a04f3973b89bed2\",\n+    \"user\": {\n+      \"login\": \"intenthq\",\n+      \"id\": 4499919,\n+      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://api.github.com/users/intenthq\",\n+      \"html_url\": \"https://github.com/intenthq\",\n+      \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+      \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+      \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+      \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+      \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+      \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+      \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+      \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+      \"type\": \"Organization\",\n+      \"user_view_type\": \"public\",\n+      \"site_admin\": false\n+    },\n+    \"repo\": {\n+      \"id\": 942562478,\n+      \"node_id\": \"R_kgDOOC5crg\",\n+      \"name\": \"ihq_assistant\",\n+      \"full_name\": \"intenthq/ihq_assistant\",\n+      \"private\": false,\n+      \"owner\": {\n+        \"login\": \"intenthq\",\n+        \"id\": 4499919,\n+        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=\",\n+        \"avatar_url\": \"https://avatars.githubusercontent.com/u/4499919?v=4\",\n+        \"gravatar_id\": \"\",\n+        \"url\": \"https://api.github.com/users/intenthq\",\n+        \"html_url\": \"https://github.com/intenthq\",\n+        \"followers_url\": \"https://api.github.com/users/intenthq/followers\",\n+        \"following_url\": \"https://api.github.com/users/intenthq/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/intenthq/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/intenthq/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/intenthq/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/intenthq/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/intenthq/repos\",\n+        \"events_url\": \"https://api.github.com/users/intenthq/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/intenthq/received_events\",\n+        \"type\": \"Organization\",\n+        \"user_view_type\": \"public\",\n+        \"site_admin\": false\n+      },\n+      \"html_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"description\": \"Hackathon Group 2 \",\n+      \"fork\": false,\n+      \"url\": \"https://api.github.com/repos/intenthq/ihq_assistant\",\n+      \"forks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/deployments\",\n+      \"created_at\": \"2025-03-04T09:53:32Z\",\n+      \"updated_at\": \"2025-03-04T16:54:42Z\",\n+      \"pushed_at\": \"2025-03-05T07:00:32Z\",\n+      \"git_url\": \"git://github.com/intenthq/ihq_assistant.git\",\n+      \"ssh_url\": \"git@github.com:intenthq/ihq_assistant.git\",\n+      \"clone_url\": \"https://github.com/intenthq/ihq_assistant.git\",\n+      \"svn_url\": \"https://github.com/intenthq/ihq_assistant\",\n+      \"homepage\": null,\n+      \"size\": 9577,\n+      \"stargazers_count\": 0,\n+      \"watchers_count\": 0,\n+      \"language\": \"Python\",\n+      \"has_issues\": true,\n+      \"has_projects\": true,\n+      \"has_downloads\": true,\n+      \"has_wiki\": true,\n+      \"has_pages\": false,\n+      \"has_discussions\": false,\n+      \"forks_count\": 0,\n+      \"mirror_url\": null,\n+      \"archived\": false,\n+      \"disabled\": false,\n+      \"open_issues_count\": 3,\n+      \"license\": null,\n+      \"allow_forking\": true,\n+      \"is_template\": false,\n+      \"web_commit_signoff_required\": false,\n+      \"topics\": [],\n+      \"visibility\": \"public\",\n+      \"forks\": 0,\n+      \"open_issues\": 3,\n+      \"watchers\": 0,\n+      \"default_branch\": \"main\"\n+    }\n+  },\n+  \"_links\": {\n+    \"self\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/9\"\n+    },\n+    \"html\": {\n+      \"href\": \"https://github.com/intenthq/ihq_assistant/pull/9\"\n+    },\n+    \"issue\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/9\"\n+    },\n+    \"comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/issues/9/comments\"\n+    },\n+    \"review_comments\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/9/comments\"\n+    },\n+    \"review_comment\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}\"\n+    },\n+    \"commits\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/pulls/9/commits\"\n+    },\n+    \"statuses\": {\n+      \"href\": \"https://api.github.com/repos/intenthq/ihq_assistant/statuses/77189e6a5c0ed620a966d4b608f22a7bd6317578\"\n+    }\n+  },\n+  \"author_association\": \"COLLABORATOR\",\n+  \"auto_merge\": null,\n+  \"active_lock_reason\": null,\n+  \"merged\": false,\n+  \"mergeable\": true,\n+  \"rebaseable\": true,\n+  \"mergeable_state\": \"clean\",\n+  \"merged_by\": null,\n+  \"comments\": 0,\n+  \"review_comments\": 0,\n+  \"maintainer_can_modify\": false,\n+  \"commits\": 2,\n+  \"additions\": 35,\n+  \"deletions\": 1,\n+  \"changed_files\": 1,\n+  \"files\": [\n+    {\n+      \"sha\": \"feac8c20b212498a006f0ee738a6f9e5515bb174\",\n+      \"filename\": \"rag_util_functions.py\",\n+      \"status\": \"renamed\",\n+      \"additions\": 35,\n+      \"deletions\": 1,\n+      \"changes\": 36,\n+      \"blob_url\": \"https://github.com/intenthq/ihq_assistant/blob/77189e6a5c0ed620a966d4b608f22a7bd6317578/rag_util_functions.py\",\n+      \"raw_url\": \"https://github.com/intenthq/ihq_assistant/raw/77189e6a5c0ed620a966d4b608f22a7bd6317578/rag_util_functions.py\",\n+      \"contents_url\": \"https://api.github.com/repos/intenthq/ihq_assistant/contents/rag_util_functions.py?ref=77189e6a5c0ed620a966d4b608f22a7bd6317578\",\n+      \"patch\": \"@@ -6,6 +6,12 @@\\n from langchain.embeddings import OpenAIEmbeddings\\n from typing import Optional\\n \\n+source_db_map = {\\n+    \\\"linear\\\": \\\"linear_embeddings.db\\\",\\n+    \\\"github\\\": \\\"github_embeddings.db\\\",\\n+    \\\"coda\\\": \\\"coda_embeddings.db\\\"\\n+}\\n+\\n \\n # These functions assume os.environ[\\\"OPENAI_API_KEY\\\"] is set\\n def load_embeddings(source_path: str = \\\"coda_linear_github_embeddings.db\\\"):\\n@@ -19,7 +25,29 @@ def load_embeddings(source_path: str = \\\"coda_linear_github_embeddings.db\\\"):\\n                             allow_dangerous_deserialization=True)\\n \\n \\n-def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: str = \\\"gpt-4\\\"):\\n+def load_databases():\\n+    dbs = {}\\n+    embeddings = OpenAIEmbeddings()\\n+    faiss = FAISS(embedding_function=embeddings,\\n+                  index=IndexFlatL2,\\n+                  docstore=InMemoryDocstore(),\\n+                  index_to_docstore_id={})\\n+    for source in source_db_map.keys():\\n+        dbs[source] = faiss.load_local(folder_path=f\\\"./db/{source_db_map[source]}\\\",\\n+                                       embeddings=embeddings,\\n+                                       allow_dangerous_deserialization=True)\\n+    return dbs\\n+\\n+\\n+def rank_sources(question: str, model: str = \\\"gpt-4o\\\"):\\n+    llm = init_chat_model(model, model_provider=\\\"openai\\\")\\n+    result = llm.invoke(\\n+        \\\"I have 3 data sources: coda, linear and github. Produce a comma-separated list ordering these from most to \\\"\\n+        f\\\"least relevant for answering the following question: {question}\\\")\\n+    return [r.strip() for r in result.content.lower().split(\\\",\\\")]\\n+\\n+\\n+def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: str = \\\"gpt-4o\\\"):\\n     if embeddings_db is not None:\\n         docs = embeddings_db.similarity_search(query=question, k=3)\\n         docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n@@ -28,3 +56,9 @@ def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: s\\n     prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n     llm = init_chat_model(model, model_provider=\\\"openai\\\")\\n     return llm.invoke(prompt.invoke({\\\"question\\\": question, \\\"context\\\": docs_content})).content\\n+\\n+\\n+def query_preferred_source(question: str, model: str = \\\"gpt-4o\\\"):\\n+    source_dbs = load_databases()\\n+    db = source_dbs[rank_sources(question)[0]]\\n+    return execute_query(question, db, model)\\n\\\\ No newline at end of file\",\n+      \"previous_filename\": \"load_vector_db.py\"\n+    }\n+  ],\n+  \"raw_diff\": \"diff --git a/load_vector_db.py b/rag_util_functions.py\\nsimilarity index 50%\\nrename from load_vector_db.py\\nrename to rag_util_functions.py\\nindex 642a37c..feac8c2 100644\\n--- a/load_vector_db.py\\n+++ b/rag_util_functions.py\\n@@ -6,6 +6,12 @@\\n from langchain.embeddings import OpenAIEmbeddings\\n from typing import Optional\\n \\n+source_db_map = {\\n+    \\\"linear\\\": \\\"linear_embeddings.db\\\",\\n+    \\\"github\\\": \\\"github_embeddings.db\\\",\\n+    \\\"coda\\\": \\\"coda_embeddings.db\\\"\\n+}\\n+\\n \\n # These functions assume os.environ[\\\"OPENAI_API_KEY\\\"] is set\\n def load_embeddings(source_path: str = \\\"coda_linear_github_embeddings.db\\\"):\\n@@ -19,7 +25,29 @@ def load_embeddings(source_path: str = \\\"coda_linear_github_embeddings.db\\\"):\\n                             allow_dangerous_deserialization=True)\\n \\n \\n-def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: str = \\\"gpt-4\\\"):\\n+def load_databases():\\n+    dbs = {}\\n+    embeddings = OpenAIEmbeddings()\\n+    faiss = FAISS(embedding_function=embeddings,\\n+                  index=IndexFlatL2,\\n+                  docstore=InMemoryDocstore(),\\n+                  index_to_docstore_id={})\\n+    for source in source_db_map.keys():\\n+        dbs[source] = faiss.load_local(folder_path=f\\\"./db/{source_db_map[source]}\\\",\\n+                                       embeddings=embeddings,\\n+                                       allow_dangerous_deserialization=True)\\n+    return dbs\\n+\\n+\\n+def rank_sources(question: str, model: str = \\\"gpt-4o\\\"):\\n+    llm = init_chat_model(model, model_provider=\\\"openai\\\")\\n+    result = llm.invoke(\\n+        \\\"I have 3 data sources: coda, linear and github. Produce a comma-separated list ordering these from most to \\\"\\n+        f\\\"least relevant for answering the following question: {question}\\\")\\n+    return [r.strip() for r in result.content.lower().split(\\\",\\\")]\\n+\\n+\\n+def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: str = \\\"gpt-4o\\\"):\\n     if embeddings_db is not None:\\n         docs = embeddings_db.similarity_search(query=question, k=3)\\n         docs_content = \\\"\\\\n\\\\n\\\".join(doc.page_content for doc in docs)\\n@@ -28,3 +56,9 @@ def execute_query(question: str, embeddings_db: Optional[FAISS] = None, model: s\\n     prompt = hub.pull(\\\"rlm/rag-prompt\\\")\\n     llm = init_chat_model(model, model_provider=\\\"openai\\\")\\n     return llm.invoke(prompt.invoke({\\\"question\\\": question, \\\"context\\\": docs_content})).content\\n+\\n+\\n+def query_preferred_source(question: str, model: str = \\\"gpt-4o\\\"):\\n+    source_dbs = load_databases()\\n+    db = source_dbs[rank_sources(question)[0]]\\n+    return execute_query(question, db, model)\\n\\\\ No newline at end of file\\n\"\n+}\n\\ No newline at end of file"
    },
    {
      "filename": "utils/github_downloader/README.md",
      "patch": "@@ -0,0 +1,54 @@\n+# Output Format\n+Each PR is saved as a JSON file with this structure:\n+```json\n+{\n+  // PR metadata (title, description, author, etc.)\n+  ...\n+  \"files\": [\n+    {\n+      \"sha\": \"abc123...\",\n+      \"filename\": \"path/to/file.py\",\n+      \"status\": \"modified\",\n+      \"additions\": 10,\n+      \"deletions\": 5,\n+      \"changes\": 15,\n+      \"patch\": \"@@ -50,7 +50,12 @@ class Example:\\n     def method(self):\\n-        return 42\\n+        # New implementation\\n+        return 84\"\n+    },\n+    ...\n+  ],\n+  \"raw_diff\": \"diff --git a/file1.py b/file1.py\\nindex abc..def 100644\\n...\"\n+}\n+```\n+\n+# Usage \n+## Basic usage\n+```bash\n+python github_pr_downloader.py username repo-name\n+```\n+\n+## With GitHub token (recommended to avoid rate limiting)\n+```bsh\n+python github_pr_downloader.py username repo-name --token YOUR_TOKEN\n+```\n+\n+## Or use environment variable\n+```bash\n+export GITHUB_TOKEN=your_token\n+python github_pr_downloader.py username repo-name\n+```\n+\n+## Customize output directory\n+```bash\n+python github_pr_downloader.py username repo-name -o ./my_prs\n+```\n+\n+## Adjust number of worker threads\n+```bash\n+python github_pr_downloader.py username repo-name -w 15\n+```\n+\n+# Notes\n+- GitHub API has a rate limit (60 requests/hour for unauthenticated users, 5000/hour with a token)\n+- For repos with many PRs or many changed files, downloads may take time\n+- For very large repos, consider reducing thread count to avoid hitting rate limits\n+- Using `--no-diffs` can significantly speed up downloads if the raw diff text is not needed"
    },
    {
      "filename": "utils/github_downloader/github_pr_downloader.py",
      "patch": "@@ -0,0 +1,208 @@\n+import requests\n+import json\n+import os\n+import time\n+import argparse\n+import concurrent.futures\n+from tqdm import tqdm\n+from requests.adapters import HTTPAdapter\n+from urllib3.util.retry import Retry\n+\n+class GitHubPRDownloader:\n+    def __init__(self, owner, repo, token=None, output_dir=\"pr_data\", include_diffs=True):\n+        self.owner = owner\n+        self.repo = repo\n+        self.output_dir = output_dir\n+        self.include_diffs = include_diffs\n+        \n+        # Set up headers\n+        self.headers = {\"Accept\": \"application/vnd.github.v3+json\"}\n+        if include_diffs:\n+            # Request diffs in the response\n+            self.diff_headers = {\n+                \"Accept\": \"application/vnd.github.v3.diff\"\n+            }\n+        \n+        if token:\n+            self.headers[\"Authorization\"] = f\"token {token}\"\n+            if include_diffs:\n+                self.diff_headers[\"Authorization\"] = f\"token {token}\"\n+        \n+        # Create a session with retry capability\n+        self.session = requests.Session()\n+        retry_strategy = Retry(\n+            total=5,\n+            backoff_factor=0.5,\n+            status_forcelist=[429, 500, 502, 503, 504],\n+        )\n+        adapter = HTTPAdapter(max_retries=retry_strategy)\n+        self.session.mount(\"https://\", adapter)\n+        self.session.mount(\"http://\", adapter)\n+        \n+        # Ensure output directory exists\n+        os.makedirs(self.output_dir, exist_ok=True)\n+    \n+    def get_total_pr_count(self):\n+        \"\"\"Get the total number of PRs in the repository\"\"\"\n+        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/pulls\"\n+        params = {\"state\": \"all\", \"per_page\": 1}\n+        response = self.session.get(url, headers=self.headers, params=params)\n+        response.raise_for_status()\n+        \n+        # Check if Link header exists to get pagination info\n+        if \"Link\" in response.headers:\n+            links = response.headers[\"Link\"]\n+            last_page_match = [link for link in links.split(\",\") if 'rel=\"last\"' in link]\n+            if last_page_match:\n+                last_page_url = last_page_match[0].split(\";\")[0].strip(\"<>\")\n+                last_page = int(last_page_url.split(\"page=\")[1].split(\"&\")[0])\n+                \n+                # Get per_page value\n+                per_page = int(params[\"per_page\"])\n+                return (last_page - 1) * per_page + len(response.json())\n+        \n+        return len(self.get_pr_batch(1, 100))\n+    \n+    def get_pr_batch(self, page, per_page=100):\n+        \"\"\"Get a batch of PRs for the specified page\"\"\"\n+        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/pulls\"\n+        params = {\"state\": \"all\", \"page\": page, \"per_page\": per_page}\n+        response = self.session.get(url, headers=self.headers, params=params)\n+        response.raise_for_status()\n+        return response.json()\n+    \n+    def get_pr_details(self, pr_number):\n+        \"\"\"Get detailed information for a specific PR\"\"\"\n+        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/pulls/{pr_number}\"\n+        response = self.session.get(url, headers=self.headers)\n+        response.raise_for_status()\n+        return response.json()\n+    \n+    def get_pr_files(self, pr_number):\n+        \"\"\"Get list of files changed in a PR\"\"\"\n+        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/pulls/{pr_number}/files\"\n+        all_files = []\n+        page = 1\n+        \n+        while True:\n+            params = {\"page\": page, \"per_page\": 100}\n+            response = self.session.get(url, headers=self.headers, params=params)\n+            response.raise_for_status()\n+            \n+            files_batch = response.json()\n+            all_files.extend(files_batch)\n+            \n+            # Check if we've got all files\n+            if len(files_batch) < 100:\n+                break\n+            \n+            page += 1\n+            time.sleep(0.1)  # Respect rate limits\n+            \n+        return all_files\n+    \n+    def get_pr_diff(self, pr_number):\n+        \"\"\"Get the full diff for a PR\"\"\"\n+        if not self.include_diffs:\n+            return None\n+            \n+        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/pulls/{pr_number}\"\n+        response = self.session.get(url, headers=self.diff_headers)\n+        response.raise_for_status()\n+        return response.text\n+    \n+    def download_pr(self, pr_number):\n+        \"\"\"Download a PR and save it as a JSON file with all file changes\"\"\"\n+        try:\n+            # Get PR metadata\n+            pr_data = self.get_pr_details(pr_number)\n+            \n+            # Get files changed in PR\n+            pr_files = self.get_pr_files(pr_number)\n+            \n+            # Add files to PR data\n+            pr_data['files'] = pr_files\n+            \n+            # Get raw diff if requested\n+            if self.include_diffs:\n+                pr_data['raw_diff'] = self.get_pr_diff(pr_number)\n+            \n+            # Save to file\n+            filename = os.path.join(self.output_dir, f\"pr_{pr_number}.json\")\n+            with open(filename, 'w', encoding='utf-8') as f:\n+                json.dump(pr_data, f, indent=2, ensure_ascii=False)\n+            \n+            return True\n+        except Exception as e:\n+            print(f\"Error downloading PR #{pr_number}: {str(e)}\")\n+            return False\n+    \n+    def download_all_prs(self, max_workers=10):\n+        \"\"\"Download all PRs using multi-threading\"\"\"\n+        # Get all PR numbers first\n+        pr_numbers = []\n+        page = 1\n+        per_page = 100\n+        \n+        print(f\"Collecting PR numbers from {self.owner}/{self.repo}...\")\n+        while True:\n+            batch = self.get_pr_batch(page, per_page)\n+            if not batch:\n+                break\n+                \n+            pr_numbers.extend(pr[\"number\"] for pr in batch)\n+            if len(batch) < per_page:\n+                break\n+                \n+            page += 1\n+            # Respect GitHub API rate limits\n+            time.sleep(0.1)\n+        \n+        total_prs = len(pr_numbers)\n+        print(f\"Found {total_prs} pull requests. Downloading with file changes...\")\n+        \n+        # Download PRs in parallel using ThreadPoolExecutor\n+        with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:\n+            # Create a progress bar\n+            results = list(tqdm(\n+                executor.map(self.download_pr, pr_numbers),\n+                total=total_prs,\n+                desc=\"Downloading PRs\",\n+                unit=\"PR\"\n+            ))\n+        \n+        # Report results\n+        successful = results.count(True)\n+        print(f\"Downloaded {successful} of {total_prs} pull requests\")\n+        if successful < total_prs:\n+            print(f\"Failed to download {total_prs - successful} pull requests\")\n+        \n+        print(f\"PR data saved to {os.path.abspath(self.output_dir)}\")\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(description=\"Download GitHub Pull Requests as JSON files\")\n+    parser.add_argument(\"owner\", help=\"Repository owner/organization\")\n+    parser.add_argument(\"repo\", help=\"Repository name\")\n+    parser.add_argument(\"--token\", \"-t\", help=\"GitHub API token\")\n+    parser.add_argument(\"--output\", \"-o\", default=\"pr_data\", help=\"Output directory\")\n+    parser.add_argument(\"--workers\", \"-w\", type=int, default=10, help=\"Number of worker threads\")\n+    parser.add_argument(\"--no-diffs\", action=\"store_true\", help=\"Skip downloading raw diffs\")\n+    args = parser.parse_args()\n+    \n+    # Use environment variable for token if not provided as argument\n+    token = args.token or os.environ.get(\"GITHUB_TOKEN\")\n+    \n+    downloader = GitHubPRDownloader(\n+        owner=args.owner,\n+        repo=args.repo,\n+        token=token,\n+        output_dir=args.output,\n+        include_diffs=not args.no_diffs\n+    )\n+    \n+    downloader.download_all_prs(max_workers=args.workers)\n+\n+\n+if __name__ == \"__main__\":\n+    main()\n\\ No newline at end of file"
    }
  ],
  "reviews": [],
  "linked_issues": "No linked issues",
  "readme": "# Install dependencies\n\nRun\n\n```\npip3 install -r ./requirements.txt\n```\n\n# Start the bot\n\nCopy `.env.template` to `.env`, fill the tokens with real tokens\n\nCreate venv\n\n```\npython3 -m venv venv\nsource venv/bin/activate\n```\n\nRun\n\n```\npython3 slack_faiss_bot.py\n```\n"
}