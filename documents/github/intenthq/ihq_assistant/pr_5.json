{
  "url": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/5",
  "id": 2371122268,
  "node_id": "PR_kwDOOC5crs6NVHRc",
  "html_url": "https://github.com/intenthq/ihq_assistant/pull/5",
  "diff_url": "https://github.com/intenthq/ihq_assistant/pull/5.diff",
  "patch_url": "https://github.com/intenthq/ihq_assistant/pull/5.patch",
  "issue_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues/5",
  "number": 5,
  "state": "closed",
  "locked": false,
  "title": "Adds messages history",
  "user": {
    "login": "javierpedreira",
    "id": 7963834,
    "node_id": "MDQ6VXNlcjc5NjM4MzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7963834?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/javierpedreira",
    "html_url": "https://github.com/javierpedreira",
    "followers_url": "https://api.github.com/users/javierpedreira/followers",
    "following_url": "https://api.github.com/users/javierpedreira/following{/other_user}",
    "gists_url": "https://api.github.com/users/javierpedreira/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/javierpedreira/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/javierpedreira/subscriptions",
    "organizations_url": "https://api.github.com/users/javierpedreira/orgs",
    "repos_url": "https://api.github.com/users/javierpedreira/repos",
    "events_url": "https://api.github.com/users/javierpedreira/events{/privacy}",
    "received_events_url": "https://api.github.com/users/javierpedreira/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "body": null,
  "created_at": "2025-03-04T15:10:14Z",
  "updated_at": "2025-03-04T16:20:33Z",
  "closed_at": "2025-03-04T16:20:32Z",
  "merged_at": "2025-03-04T16:20:32Z",
  "merge_commit_sha": "ae1d94fc3241225b25e99d930ec6908c0dd4ebad",
  "assignee": null,
  "assignees": [],
  "requested_reviewers": [
    {
      "login": "geo-harrison",
      "id": 176415250,
      "node_id": "U_kgDOCoPiEg",
      "avatar_url": "https://avatars.githubusercontent.com/u/176415250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geo-harrison",
      "html_url": "https://github.com/geo-harrison",
      "followers_url": "https://api.github.com/users/geo-harrison/followers",
      "following_url": "https://api.github.com/users/geo-harrison/following{/other_user}",
      "gists_url": "https://api.github.com/users/geo-harrison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geo-harrison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geo-harrison/subscriptions",
      "organizations_url": "https://api.github.com/users/geo-harrison/orgs",
      "repos_url": "https://api.github.com/users/geo-harrison/repos",
      "events_url": "https://api.github.com/users/geo-harrison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geo-harrison/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    }
  ],
  "requested_teams": [],
  "labels": [],
  "milestone": null,
  "draft": false,
  "commits_url": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/commits",
  "review_comments_url": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/comments",
  "review_comment_url": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}",
  "comments_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues/5/comments",
  "statuses_url": "https://api.github.com/repos/intenthq/ihq_assistant/statuses/084389d27565be19a4c46d3924177038a5d39b57",
  "head": {
    "label": "intenthq:add-messages-history",
    "ref": "add-messages-history",
    "sha": "084389d27565be19a4c46d3924177038a5d39b57",
    "user": {
      "login": "intenthq",
      "id": 4499919,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4499919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/intenthq",
      "html_url": "https://github.com/intenthq",
      "followers_url": "https://api.github.com/users/intenthq/followers",
      "following_url": "https://api.github.com/users/intenthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/intenthq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/intenthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/intenthq/subscriptions",
      "organizations_url": "https://api.github.com/users/intenthq/orgs",
      "repos_url": "https://api.github.com/users/intenthq/repos",
      "events_url": "https://api.github.com/users/intenthq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/intenthq/received_events",
      "type": "Organization",
      "user_view_type": "public",
      "site_admin": false
    },
    "repo": {
      "id": 942562478,
      "node_id": "R_kgDOOC5crg",
      "name": "ihq_assistant",
      "full_name": "intenthq/ihq_assistant",
      "private": false,
      "owner": {
        "login": "intenthq",
        "id": 4499919,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4499919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/intenthq",
        "html_url": "https://github.com/intenthq",
        "followers_url": "https://api.github.com/users/intenthq/followers",
        "following_url": "https://api.github.com/users/intenthq/following{/other_user}",
        "gists_url": "https://api.github.com/users/intenthq/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/intenthq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/intenthq/subscriptions",
        "organizations_url": "https://api.github.com/users/intenthq/orgs",
        "repos_url": "https://api.github.com/users/intenthq/repos",
        "events_url": "https://api.github.com/users/intenthq/events{/privacy}",
        "received_events_url": "https://api.github.com/users/intenthq/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "html_url": "https://github.com/intenthq/ihq_assistant",
      "description": "Hackathon Group 2 ",
      "fork": false,
      "url": "https://api.github.com/repos/intenthq/ihq_assistant",
      "forks_url": "https://api.github.com/repos/intenthq/ihq_assistant/forks",
      "keys_url": "https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/intenthq/ihq_assistant/teams",
      "hooks_url": "https://api.github.com/repos/intenthq/ihq_assistant/hooks",
      "issue_events_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}",
      "events_url": "https://api.github.com/repos/intenthq/ihq_assistant/events",
      "assignees_url": "https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}",
      "branches_url": "https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}",
      "tags_url": "https://api.github.com/repos/intenthq/ihq_assistant/tags",
      "blobs_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/intenthq/ihq_assistant/languages",
      "stargazers_url": "https://api.github.com/repos/intenthq/ihq_assistant/stargazers",
      "contributors_url": "https://api.github.com/repos/intenthq/ihq_assistant/contributors",
      "subscribers_url": "https://api.github.com/repos/intenthq/ihq_assistant/subscribers",
      "subscription_url": "https://api.github.com/repos/intenthq/ihq_assistant/subscription",
      "commits_url": "https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}",
      "compare_url": "https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/intenthq/ihq_assistant/merges",
      "archive_url": "https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/intenthq/ihq_assistant/downloads",
      "issues_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}",
      "pulls_url": "https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}",
      "releases_url": "https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}",
      "deployments_url": "https://api.github.com/repos/intenthq/ihq_assistant/deployments",
      "created_at": "2025-03-04T09:53:32Z",
      "updated_at": "2025-03-04T16:54:42Z",
      "pushed_at": "2025-03-05T07:00:32Z",
      "git_url": "git://github.com/intenthq/ihq_assistant.git",
      "ssh_url": "git@github.com:intenthq/ihq_assistant.git",
      "clone_url": "https://github.com/intenthq/ihq_assistant.git",
      "svn_url": "https://github.com/intenthq/ihq_assistant",
      "homepage": null,
      "size": 9577,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 3,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 3,
      "watchers": 0,
      "default_branch": "main"
    }
  },
  "base": {
    "label": "intenthq:main",
    "ref": "main",
    "sha": "7b74087e75e8c9b0ee70115e14b30a1892d5d680",
    "user": {
      "login": "intenthq",
      "id": 4499919,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4499919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/intenthq",
      "html_url": "https://github.com/intenthq",
      "followers_url": "https://api.github.com/users/intenthq/followers",
      "following_url": "https://api.github.com/users/intenthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/intenthq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/intenthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/intenthq/subscriptions",
      "organizations_url": "https://api.github.com/users/intenthq/orgs",
      "repos_url": "https://api.github.com/users/intenthq/repos",
      "events_url": "https://api.github.com/users/intenthq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/intenthq/received_events",
      "type": "Organization",
      "user_view_type": "public",
      "site_admin": false
    },
    "repo": {
      "id": 942562478,
      "node_id": "R_kgDOOC5crg",
      "name": "ihq_assistant",
      "full_name": "intenthq/ihq_assistant",
      "private": false,
      "owner": {
        "login": "intenthq",
        "id": 4499919,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ0OTk5MTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4499919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/intenthq",
        "html_url": "https://github.com/intenthq",
        "followers_url": "https://api.github.com/users/intenthq/followers",
        "following_url": "https://api.github.com/users/intenthq/following{/other_user}",
        "gists_url": "https://api.github.com/users/intenthq/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/intenthq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/intenthq/subscriptions",
        "organizations_url": "https://api.github.com/users/intenthq/orgs",
        "repos_url": "https://api.github.com/users/intenthq/repos",
        "events_url": "https://api.github.com/users/intenthq/events{/privacy}",
        "received_events_url": "https://api.github.com/users/intenthq/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "html_url": "https://github.com/intenthq/ihq_assistant",
      "description": "Hackathon Group 2 ",
      "fork": false,
      "url": "https://api.github.com/repos/intenthq/ihq_assistant",
      "forks_url": "https://api.github.com/repos/intenthq/ihq_assistant/forks",
      "keys_url": "https://api.github.com/repos/intenthq/ihq_assistant/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/intenthq/ihq_assistant/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/intenthq/ihq_assistant/teams",
      "hooks_url": "https://api.github.com/repos/intenthq/ihq_assistant/hooks",
      "issue_events_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues/events{/number}",
      "events_url": "https://api.github.com/repos/intenthq/ihq_assistant/events",
      "assignees_url": "https://api.github.com/repos/intenthq/ihq_assistant/assignees{/user}",
      "branches_url": "https://api.github.com/repos/intenthq/ihq_assistant/branches{/branch}",
      "tags_url": "https://api.github.com/repos/intenthq/ihq_assistant/tags",
      "blobs_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/intenthq/ihq_assistant/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/intenthq/ihq_assistant/languages",
      "stargazers_url": "https://api.github.com/repos/intenthq/ihq_assistant/stargazers",
      "contributors_url": "https://api.github.com/repos/intenthq/ihq_assistant/contributors",
      "subscribers_url": "https://api.github.com/repos/intenthq/ihq_assistant/subscribers",
      "subscription_url": "https://api.github.com/repos/intenthq/ihq_assistant/subscription",
      "commits_url": "https://api.github.com/repos/intenthq/ihq_assistant/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/intenthq/ihq_assistant/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/intenthq/ihq_assistant/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/intenthq/ihq_assistant/contents/{+path}",
      "compare_url": "https://api.github.com/repos/intenthq/ihq_assistant/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/intenthq/ihq_assistant/merges",
      "archive_url": "https://api.github.com/repos/intenthq/ihq_assistant/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/intenthq/ihq_assistant/downloads",
      "issues_url": "https://api.github.com/repos/intenthq/ihq_assistant/issues{/number}",
      "pulls_url": "https://api.github.com/repos/intenthq/ihq_assistant/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/intenthq/ihq_assistant/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/intenthq/ihq_assistant/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/intenthq/ihq_assistant/labels{/name}",
      "releases_url": "https://api.github.com/repos/intenthq/ihq_assistant/releases{/id}",
      "deployments_url": "https://api.github.com/repos/intenthq/ihq_assistant/deployments",
      "created_at": "2025-03-04T09:53:32Z",
      "updated_at": "2025-03-04T16:54:42Z",
      "pushed_at": "2025-03-05T07:00:32Z",
      "git_url": "git://github.com/intenthq/ihq_assistant.git",
      "ssh_url": "git@github.com:intenthq/ihq_assistant.git",
      "clone_url": "https://github.com/intenthq/ihq_assistant.git",
      "svn_url": "https://github.com/intenthq/ihq_assistant",
      "homepage": null,
      "size": 9577,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 3,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 3,
      "watchers": 0,
      "default_branch": "main"
    }
  },
  "_links": {
    "self": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/5"
    },
    "html": {
      "href": "https://github.com/intenthq/ihq_assistant/pull/5"
    },
    "issue": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/issues/5"
    },
    "comments": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/issues/5/comments"
    },
    "review_comments": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/comments"
    },
    "review_comment": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/comments{/number}"
    },
    "commits": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/pulls/5/commits"
    },
    "statuses": {
      "href": "https://api.github.com/repos/intenthq/ihq_assistant/statuses/084389d27565be19a4c46d3924177038a5d39b57"
    }
  },
  "author_association": "CONTRIBUTOR",
  "auto_merge": null,
  "active_lock_reason": null,
  "merged": true,
  "mergeable": null,
  "rebaseable": null,
  "mergeable_state": "unknown",
  "merged_by": {
    "login": "javierpedreira",
    "id": 7963834,
    "node_id": "MDQ6VXNlcjc5NjM4MzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7963834?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/javierpedreira",
    "html_url": "https://github.com/javierpedreira",
    "followers_url": "https://api.github.com/users/javierpedreira/followers",
    "following_url": "https://api.github.com/users/javierpedreira/following{/other_user}",
    "gists_url": "https://api.github.com/users/javierpedreira/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/javierpedreira/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/javierpedreira/subscriptions",
    "organizations_url": "https://api.github.com/users/javierpedreira/orgs",
    "repos_url": "https://api.github.com/users/javierpedreira/repos",
    "events_url": "https://api.github.com/users/javierpedreira/events{/privacy}",
    "received_events_url": "https://api.github.com/users/javierpedreira/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "comments": 0,
  "review_comments": 0,
  "maintainer_can_modify": false,
  "commits": 1,
  "additions": 34,
  "deletions": 13,
  "changed_files": 1,
  "files": [
    {
      "sha": "21fa2a2094c950b16945496e1164886e8386a00c",
      "filename": "slack_faiss_bot.py",
      "status": "modified",
      "additions": 34,
      "deletions": 13,
      "changes": 47,
      "blob_url": "https://github.com/intenthq/ihq_assistant/blob/084389d27565be19a4c46d3924177038a5d39b57/slack_faiss_bot.py",
      "raw_url": "https://github.com/intenthq/ihq_assistant/raw/084389d27565be19a4c46d3924177038a5d39b57/slack_faiss_bot.py",
      "contents_url": "https://api.github.com/repos/intenthq/ihq_assistant/contents/slack_faiss_bot.py?ref=084389d27565be19a4c46d3924177038a5d39b57",
      "patch": "@@ -6,12 +6,15 @@\n from slack_bolt.adapter.socket_mode import SocketModeHandler\n from dotenv import load_dotenv\n import logging\n+from collections import deque\n from langchain_community.docstore.in_memory import InMemoryDocstore\n from langchain_community.vectorstores import FAISS\n from langchain import hub\n from langchain.chat_models import init_chat_model\n from langchain.embeddings import OpenAIEmbeddings\n from faiss import IndexFlatL2\n+from langchain.chains import LLMChain\n+from langchain.prompts import PromptTemplate\n \n # Load environment variables from .env file\n load_dotenv()\n@@ -20,19 +23,19 @@\n print(\"SLACK_APP_TOKEN:\", os.getenv(\"SLACK_APP_TOKEN\"))\n print(\"OPENAI_API_KEY:\", os.getenv(\"OPENAI_API_KEY\"))\n \n-# # Define API Keys and Tokens from environment variables\n+# Define API Keys and Tokens from environment variables\n SLACK_BOT_TOKEN = os.getenv(\"SLACK_BOT_TOKEN\")\n SLACK_APP_TOKEN = os.getenv(\"SLACK_APP_TOKEN\")\n OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n \n-\n-\n # Configure OpenAI API Key\n openai.api_key = OPENAI_API_KEY\n \n # Enable debug logging\n logging.basicConfig(level=logging.DEBUG)\n \n+# Memory storage for last 5 mentions\n+mention_memory = {}  # Key: channel_id, Value: deque of last 5 mentions\n \n # Generate OpenAI embeddings for documents\n def get_embedding(text):\n@@ -41,36 +44,54 @@ def get_embedding(text):\n     )\n     return np.array(response.data[0].embedding, dtype=np.float32)\n \n-\n # Initialize Slack App\n app = App(token=SLACK_BOT_TOKEN)\n \n # Function to search FAISS\n-def search_faiss(query):\n+def search_faiss(query, channel_id):\n     embeddings = OpenAIEmbeddings()\n-    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})    \n+    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})\n     db = faiss.load_local(folder_path=\"./db/coda_linear_github_embeddings.db\", embeddings=embeddings, allow_dangerous_deserialization=True)\n-    \n+\n     docs = db.similarity_search(query, k=3)\n     logging.debug(f\"Len docs: {len(docs)}\")\n-      \n+\n     docs_content = \"\\n\\n\".join(doc.page_content for doc in docs)\n     logging.debug(f\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\")\n-    prompt = hub.pull(\"rlm/rag-prompt\")\n \n+    # Retrieve last 5 messages from memory for this channel\n+    chat_history = \"\\n\".join(mention_memory.get(channel_id, []))\n+    logging.debug(f\"🔹 Chat History for channel {channel_id}: {chat_history}\")\n \n     llm = init_chat_model(\"gpt-4\", model_provider=\"openai\")\n-    response = llm.invoke(prompt.invoke({\"question\": query, \"context\": docs_content}))\n-    \n-    return response.content\n+    prompt_template = PromptTemplate(\n+        input_variables=[\"chat_history\", \"question\", \"context\"],\n+        template=\"{chat_history}\\nUser: {question}\\nContext: {context}\\nAssistant:\"\n+    )\n+    chain = LLMChain(llm=llm, prompt=prompt_template)\n+\n+    response = chain.run(chat_history=chat_history, question=query, context=docs_content)\n+\n+    return response  # Fix: LLMChain outputs a string, no need for `.content`\n+\n+# Function to store last 5 mentions per channel\n+def store_mention(channel_id, mention_text):\n+    if channel_id not in mention_memory:\n+        mention_memory[channel_id] = deque(maxlen=10)\n+    mention_memory[channel_id].append(mention_text)\n+    logging.debug(f\"🔹 Updated memory for channel {channel_id}: {list(mention_memory[channel_id])}\")\n \n # Slack bot listens for messages that mention it\n @app.event(\"app_mention\")\n def handle_mention(event, say):\n     logging.debug(f\"🔹 Received mention event: {event}\")  # Debugging log\n     user_query = event[\"text\"]\n-    best_match = search_faiss(user_query)\n+    channel_id = event[\"channel\"]\n+    \n+    store_mention(channel_id, user_query)  # Store the mention\n+    best_match = search_faiss(user_query, channel_id)\n     logging.debug(f\"🔹 Best FAISS match: {best_match}\")\n+    \n     say(f\"Best Match: {best_match}\")\n \n # Start the Slack bot using Socket Mode"
    }
  ],
  "raw_diff": "diff --git a/slack_faiss_bot.py b/slack_faiss_bot.py\nindex 2faf775..21fa2a2 100644\n--- a/slack_faiss_bot.py\n+++ b/slack_faiss_bot.py\n@@ -6,12 +6,15 @@\n from slack_bolt.adapter.socket_mode import SocketModeHandler\n from dotenv import load_dotenv\n import logging\n+from collections import deque\n from langchain_community.docstore.in_memory import InMemoryDocstore\n from langchain_community.vectorstores import FAISS\n from langchain import hub\n from langchain.chat_models import init_chat_model\n from langchain.embeddings import OpenAIEmbeddings\n from faiss import IndexFlatL2\n+from langchain.chains import LLMChain\n+from langchain.prompts import PromptTemplate\n \n # Load environment variables from .env file\n load_dotenv()\n@@ -20,19 +23,19 @@\n print(\"SLACK_APP_TOKEN:\", os.getenv(\"SLACK_APP_TOKEN\"))\n print(\"OPENAI_API_KEY:\", os.getenv(\"OPENAI_API_KEY\"))\n \n-# # Define API Keys and Tokens from environment variables\n+# Define API Keys and Tokens from environment variables\n SLACK_BOT_TOKEN = os.getenv(\"SLACK_BOT_TOKEN\")\n SLACK_APP_TOKEN = os.getenv(\"SLACK_APP_TOKEN\")\n OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n \n-\n-\n # Configure OpenAI API Key\n openai.api_key = OPENAI_API_KEY\n \n # Enable debug logging\n logging.basicConfig(level=logging.DEBUG)\n \n+# Memory storage for last 5 mentions\n+mention_memory = {}  # Key: channel_id, Value: deque of last 5 mentions\n \n # Generate OpenAI embeddings for documents\n def get_embedding(text):\n@@ -41,36 +44,54 @@ def get_embedding(text):\n     )\n     return np.array(response.data[0].embedding, dtype=np.float32)\n \n-\n # Initialize Slack App\n app = App(token=SLACK_BOT_TOKEN)\n \n # Function to search FAISS\n-def search_faiss(query):\n+def search_faiss(query, channel_id):\n     embeddings = OpenAIEmbeddings()\n-    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})    \n+    faiss = FAISS(embedding_function=embeddings, index=IndexFlatL2, docstore=InMemoryDocstore(), index_to_docstore_id={})\n     db = faiss.load_local(folder_path=\"./db/coda_linear_github_embeddings.db\", embeddings=embeddings, allow_dangerous_deserialization=True)\n-    \n+\n     docs = db.similarity_search(query, k=3)\n     logging.debug(f\"Len docs: {len(docs)}\")\n-      \n+\n     docs_content = \"\\n\\n\".join(doc.page_content for doc in docs)\n     logging.debug(f\"Doc sources: {';'.join([d.metadata['source'] for d in docs])}\")\n-    prompt = hub.pull(\"rlm/rag-prompt\")\n \n+    # Retrieve last 5 messages from memory for this channel\n+    chat_history = \"\\n\".join(mention_memory.get(channel_id, []))\n+    logging.debug(f\"🔹 Chat History for channel {channel_id}: {chat_history}\")\n \n     llm = init_chat_model(\"gpt-4\", model_provider=\"openai\")\n-    response = llm.invoke(prompt.invoke({\"question\": query, \"context\": docs_content}))\n-    \n-    return response.content\n+    prompt_template = PromptTemplate(\n+        input_variables=[\"chat_history\", \"question\", \"context\"],\n+        template=\"{chat_history}\\nUser: {question}\\nContext: {context}\\nAssistant:\"\n+    )\n+    chain = LLMChain(llm=llm, prompt=prompt_template)\n+\n+    response = chain.run(chat_history=chat_history, question=query, context=docs_content)\n+\n+    return response  # Fix: LLMChain outputs a string, no need for `.content`\n+\n+# Function to store last 5 mentions per channel\n+def store_mention(channel_id, mention_text):\n+    if channel_id not in mention_memory:\n+        mention_memory[channel_id] = deque(maxlen=10)\n+    mention_memory[channel_id].append(mention_text)\n+    logging.debug(f\"🔹 Updated memory for channel {channel_id}: {list(mention_memory[channel_id])}\")\n \n # Slack bot listens for messages that mention it\n @app.event(\"app_mention\")\n def handle_mention(event, say):\n     logging.debug(f\"🔹 Received mention event: {event}\")  # Debugging log\n     user_query = event[\"text\"]\n-    best_match = search_faiss(user_query)\n+    channel_id = event[\"channel\"]\n+    \n+    store_mention(channel_id, user_query)  # Store the mention\n+    best_match = search_faiss(user_query, channel_id)\n     logging.debug(f\"🔹 Best FAISS match: {best_match}\")\n+    \n     say(f\"Best Match: {best_match}\")\n \n # Start the Slack bot using Socket Mode\n"
}