{
  "title": "Adds tokens to .env file",
  "description": null,
  "author": "javierpedreira",
  "created_at": "2025-03-04T11:54:07Z",
  "changed_files": [
    {
      "filename": ".env.template",
      "patch": "@@ -0,0 +1,3 @@\n+SLACK_BOT_TOKEN = <your-token>\n+SLACK_APP_TOKEN = <your-token>\n+OPENAI_API_KEY = <your-openapi-key>"
    },
    {
      "filename": ".gitignore",
      "patch": "@@ -0,0 +1 @@\n+.env"
    },
    {
      "filename": "slack_faiss_bot.py",
      "patch": "@@ -2,16 +2,30 @@\n import faiss\n import numpy as np\n import openai\n-import logging\n from slack_bolt import App\n from slack_bolt.adapter.socket_mode import SocketModeHandler\n+from dotenv import load_dotenv\n+import logging\n+\n+# Load environment variables from .env file\n+load_dotenv()\n+\n+print(\"SLACK_BOT_TOKEN:\", os.getenv(\"SLACK_BOT_TOKEN\"))\n+print(\"SLACK_APP_TOKEN:\", os.getenv(\"SLACK_APP_TOKEN\"))\n+print(\"OPENAI_API_KEY:\", os.getenv(\"OPENAI_API_KEY\"))\n+\n+# # Define API Keys and Tokens from environment variables\n+SLACK_BOT_TOKEN = os.getenv(\"SLACK_BOT_TOKEN\")\n+SLACK_APP_TOKEN = os.getenv(\"SLACK_APP_TOKEN\")\n+OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n+\n+\n \n-# Define API Keys and Tokens\n-SLACK_BOT_TOKEN = \"<your-token>\"\n-SLACK_APP_TOKEN = \"<your-app-token>\"\n-OPEN_API_KEY = \"<your-open-api-token>\"\n # Configure OpenAI API Key\n-openai.api_key = OPEN_API_KEY\n+openai.api_key = OPENAI_API_KEY\n+\n+# Enable debug logging\n+logging.basicConfig(level=logging.DEBUG)\n \n # Sample test documents\n documents = [\n@@ -51,13 +65,11 @@ def get_embedding(text):\n index = faiss.IndexFlatL2(d)\n index.add(embeddings)\n \n-logging.basicConfig(level=logging.DEBUG)\n # Initialize Slack App\n app = App(token=SLACK_BOT_TOKEN)\n \n # Function to search FAISS\n def search_faiss(query):\n-    print(f\"Searching for the best answer in the vector for {query}\")\n     query_vector = np.array([get_embedding(query)], dtype=np.float32)\n     faiss.normalize_L2(query_vector)\n     _, idx = index.search(query_vector, k=1)\n@@ -66,8 +78,10 @@ def search_faiss(query):\n # Slack bot listens for messages that mention it\n @app.event(\"app_mention\")\n def handle_mention(event, say):\n+    logging.debug(f\"ðŸ”¹ Received mention event: {event}\")  # Debugging log\n     user_query = event[\"text\"]\n     best_match = search_faiss(user_query)\n+    logging.debug(f\"ðŸ”¹ Best FAISS match: {best_match}\")\n     say(f\"Best Match: {best_match}\")\n \n # Start the Slack bot using Socket Mode"
    }
  ],
  "reviews": [],
  "linked_issues": "No linked issues",
  "readme": "# Install dependencies\n\nRun\n\n```\npip3 install -r ./requirements.txt\n```\n\n# Start the bot\n\nCopy `.env.template` to `.env`, fill the tokens with real tokens\n\nCreate venv\n\n```\npython3 -m venv venv\nsource venv/bin/activate\n```\n\nRun\n\n```\npython3 slack_faiss_bot.py\n```\n"
}